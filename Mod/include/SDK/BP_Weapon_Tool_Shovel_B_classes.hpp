#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Weapon_Tool_Shovel_B

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ModularWeaponBP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Weapon_Tool_Shovel_B.BP_Weapon_Tool_Shovel_B_C
// 0x0028 (0x0B58 - 0x0B30)
class ABP_Weapon_Tool_Shovel_B_C final : public AModularWeaponBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Weapon_Tool_Shovel_B_C;          // 0x0B30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Tip5;                                              // 0x0B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip2;                                              // 0x0B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Base0;                                             // 0x0B48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Weapon;                                            // 0x0B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Buckler_Buckler_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_BP_Weapon_Tool_Shovel_B(int32 EntryPoint);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Weapon_Tool_Shovel_B_C">();
	}
	static class ABP_Weapon_Tool_Shovel_B_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Weapon_Tool_Shovel_B_C>();
	}
};
static_assert(alignof(ABP_Weapon_Tool_Shovel_B_C) == 0x000008, "Wrong alignment on ABP_Weapon_Tool_Shovel_B_C");
static_assert(sizeof(ABP_Weapon_Tool_Shovel_B_C) == 0x000B58, "Wrong size on ABP_Weapon_Tool_Shovel_B_C");
static_assert(offsetof(ABP_Weapon_Tool_Shovel_B_C, UberGraphFrame_BP_Weapon_Tool_Shovel_B_C) == 0x000B30, "Member 'ABP_Weapon_Tool_Shovel_B_C::UberGraphFrame_BP_Weapon_Tool_Shovel_B_C' has a wrong offset!");
static_assert(offsetof(ABP_Weapon_Tool_Shovel_B_C, Tip5) == 0x000B38, "Member 'ABP_Weapon_Tool_Shovel_B_C::Tip5' has a wrong offset!");
static_assert(offsetof(ABP_Weapon_Tool_Shovel_B_C, Tip2) == 0x000B40, "Member 'ABP_Weapon_Tool_Shovel_B_C::Tip2' has a wrong offset!");
static_assert(offsetof(ABP_Weapon_Tool_Shovel_B_C, Base0) == 0x000B48, "Member 'ABP_Weapon_Tool_Shovel_B_C::Base0' has a wrong offset!");
static_assert(offsetof(ABP_Weapon_Tool_Shovel_B_C, Weapon) == 0x000B50, "Member 'ABP_Weapon_Tool_Shovel_B_C::Weapon' has a wrong offset!");

}

