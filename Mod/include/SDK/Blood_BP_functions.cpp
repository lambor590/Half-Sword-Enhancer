#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Blood_BP

#include "Basic.hpp"

#include "Blood_BP_classes.hpp"
#include "Blood_BP_parameters.hpp"


namespace SDK
{

// Function Blood_BP.Blood_BP_C.BndEvt__Willie_BP_BPC_RuntimeVertexPaintAndDetectionComponent_K2Node_ComponentBoundEvent_2_VertexColorGetClosestVertexData__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FRVPDPTaskResults                TaskResultInfo                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FRVPDPGetClosestVertexDataSettingsDetectedMeshWithSettings                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FRVPDPClosestVertexDataResults   ClosestVertexInfo                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRVPDPEstimatedColorAtHitLocationInfoEstimatedColorAtHitLocationInfo                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRVPDPAverageColorInAreaInfo     AvarageColorInAreaInfo                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FRVPDPAdditionalDataToPassThroughInfoAdditionalData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABlood_BP_C::BndEvt__Willie_BP_BPC_RuntimeVertexPaintAndDetectionComponent_K2Node_ComponentBoundEvent_2_VertexColorGetClosestVertexData__DelegateSignature(const struct FRVPDPTaskResults& TaskResultInfo, const struct FRVPDPGetClosestVertexDataSettings& DetectedMeshWithSettings, const struct FRVPDPClosestVertexDataResults& ClosestVertexInfo, const struct FRVPDPEstimatedColorAtHitLocationInfo& EstimatedColorAtHitLocationInfo, const struct FRVPDPAverageColorInAreaInfo& AvarageColorInAreaInfo, const struct FRVPDPAdditionalDataToPassThroughInfo& AdditionalData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Blood_BP_C", "BndEvt__Willie_BP_BPC_RuntimeVertexPaintAndDetectionComponent_K2Node_ComponentBoundEvent_2_VertexColorGetClosestVertexData__DelegateSignature");

	Params::Blood_BP_C_BndEvt__Willie_BP_BPC_RuntimeVertexPaintAndDetectionComponent_K2Node_ComponentBoundEvent_2_VertexColorGetClosestVertexData__DelegateSignature Parms{};

	Parms.TaskResultInfo = std::move(TaskResultInfo);
	Parms.DetectedMeshWithSettings = std::move(DetectedMeshWithSettings);
	Parms.ClosestVertexInfo = std::move(ClosestVertexInfo);
	Parms.EstimatedColorAtHitLocationInfo = std::move(EstimatedColorAtHitLocationInfo);
	Parms.AvarageColorInAreaInfo = std::move(AvarageColorInAreaInfo);
	Parms.AdditionalData = std::move(AdditionalData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Blood_BP.Blood_BP_C.ExecuteUbergraph_Blood_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABlood_BP_C::ExecuteUbergraph_Blood_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Blood_BP_C", "ExecuteUbergraph_Blood_BP");

	Params::Blood_BP_C_ExecuteUbergraph_Blood_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Blood_BP.Blood_BP_C.Get Vertex Color On Surface Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FRVPDPGetClosestVertexDataSettingsGetClosestVertexDataStruct                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABlood_BP_C::Get_Vertex_Color_On_Surface_Event(class UPrimitiveComponent* MeshComponent, const struct FRVPDPGetClosestVertexDataSettings& GetClosestVertexDataStruct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Blood_BP_C", "Get Vertex Color On Surface Event");

	Params::Blood_BP_C_Get_Vertex_Color_On_Surface_Event Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.GetClosestVertexDataStruct = std::move(GetClosestVertexDataStruct);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Blood_BP.Blood_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABlood_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Blood_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Blood_BP.Blood_BP_C.ReceiveParticleData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBasicParticleData>       Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UNiagaraSystem*                   NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SimulationPositionOffset                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABlood_BP_C::ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem, const struct FVector& SimulationPositionOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Blood_BP_C", "ReceiveParticleData");

	Params::Blood_BP_C_ReceiveParticleData Parms{};

	Parms.Data = std::move(Data);
	Parms.NiagaraSystem = NiagaraSystem;
	Parms.SimulationPositionOffset = std::move(SimulationPositionOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Blood_BP.Blood_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABlood_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Blood_BP_C", "ReceiveTick");

	Params::Blood_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Blood_BP.Blood_BP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABlood_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Blood_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

