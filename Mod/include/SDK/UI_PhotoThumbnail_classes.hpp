#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PhotoThumbnail

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_PhotosData_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_PhotoThumbnail.UI_PhotoThumbnail_C
// 0x0100 (0x03E0 - 0x02E0)
class UUI_PhotoThumbnail_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NotifySelection;                                   // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BottomLeft;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomRight;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Edges;                                             // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Photo;                                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PhotoFrame;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLeft;                                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopRight;                                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FS_PhotosData                          PhotoData;                                         // 0x0330(0x0030)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FLinearColor                           CurrentColor;                                      // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Frame;                                             // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BaseSize;                                          // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SizeMultiplier;                                    // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_Gallery_C*                          GalleryReference;                                  // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FS_PhotosData& PhotoData)> SendPhoto;                                         // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UUI_PhotoPage_C*                        Page;                                              // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FrameFocusedColor;                                 // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FrameUnfocusedColor;                               // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFocused;                                          // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Animation();
	void BndEvt__ButtonPhoto_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void DeleteData();
	void Destruct();
	ESlateVisibility Edges_Visibility();
	void ExecuteUbergraph_UI_PhotoThumbnail(int32 EntryPoint);
	struct FLinearColor FrameFocusedAndUnfocusedColor();
	void Initialize(class UUI_Gallery_C* GalleryReference_0, class UUI_PhotoPage_C* OwnPage);
	void PreConstruct(bool IsDesignTime);
	void ResetThumb();
	void ResetThumbAnimation();
	void SetPhotoData(const struct FS_PhotosData& PhotoInfo);
	void UpdatePhoto();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_PhotoThumbnail_C">();
	}
	static class UUI_PhotoThumbnail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_PhotoThumbnail_C>();
	}
};
static_assert(alignof(UUI_PhotoThumbnail_C) == 0x000008, "Wrong alignment on UUI_PhotoThumbnail_C");
static_assert(sizeof(UUI_PhotoThumbnail_C) == 0x0003E0, "Wrong size on UUI_PhotoThumbnail_C");
static_assert(offsetof(UUI_PhotoThumbnail_C, UberGraphFrame) == 0x0002E0, "Member 'UUI_PhotoThumbnail_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, NotifySelection) == 0x0002E8, "Member 'UUI_PhotoThumbnail_C::NotifySelection' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, BottomLeft) == 0x0002F0, "Member 'UUI_PhotoThumbnail_C::BottomLeft' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, BottomRight) == 0x0002F8, "Member 'UUI_PhotoThumbnail_C::BottomRight' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, Button) == 0x000300, "Member 'UUI_PhotoThumbnail_C::Button' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, Edges) == 0x000308, "Member 'UUI_PhotoThumbnail_C::Edges' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, Photo) == 0x000310, "Member 'UUI_PhotoThumbnail_C::Photo' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, PhotoFrame) == 0x000318, "Member 'UUI_PhotoThumbnail_C::PhotoFrame' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, TopLeft) == 0x000320, "Member 'UUI_PhotoThumbnail_C::TopLeft' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, TopRight) == 0x000328, "Member 'UUI_PhotoThumbnail_C::TopRight' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, PhotoData) == 0x000330, "Member 'UUI_PhotoThumbnail_C::PhotoData' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, CurrentColor) == 0x000360, "Member 'UUI_PhotoThumbnail_C::CurrentColor' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, Texture) == 0x000370, "Member 'UUI_PhotoThumbnail_C::Texture' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, Frame) == 0x000378, "Member 'UUI_PhotoThumbnail_C::Frame' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, BaseSize) == 0x000380, "Member 'UUI_PhotoThumbnail_C::BaseSize' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, SizeMultiplier) == 0x000390, "Member 'UUI_PhotoThumbnail_C::SizeMultiplier' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, GalleryReference) == 0x000398, "Member 'UUI_PhotoThumbnail_C::GalleryReference' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, SendPhoto) == 0x0003A0, "Member 'UUI_PhotoThumbnail_C::SendPhoto' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, Page) == 0x0003B0, "Member 'UUI_PhotoThumbnail_C::Page' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, FrameFocusedColor) == 0x0003B8, "Member 'UUI_PhotoThumbnail_C::FrameFocusedColor' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, FrameUnfocusedColor) == 0x0003C8, "Member 'UUI_PhotoThumbnail_C::FrameUnfocusedColor' has a wrong offset!");
static_assert(offsetof(UUI_PhotoThumbnail_C, bFocused) == 0x0003D8, "Member 'UUI_PhotoThumbnail_C::bFocused' has a wrong offset!");

}

