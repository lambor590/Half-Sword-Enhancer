#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PhotoMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "E_ColorGradingMode_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_PhotoMode.UI_PhotoMode_C
// 0x0C70 (0x0F50 - 0x02E0)
class UUI_PhotoMode_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FocusUnderClick;                                   // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpenPhotoMode;                                     // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NotificationScreenshotTaken;                       // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_Selector_C*                         Aperture;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               APM_SizeMenu;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Checkbox_C*                         Autofocus;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderScreenshotTaken;                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           Brightness;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_TabButton_C*                        btn_CameraTab;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_TabButton_C*                        btn_ColorBalanceTab;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_TabButton_C*                        btn_DepthOfFieldTab;                               // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_TabButton_C*                        btn_DisplayTab;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_TabButton_C*                        btn_FiltersTab;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_TabButton_C*                        btn_FramesTab;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_TabButton_C*                        btn_LogoTab;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_TabButton_C*                        btn_ScreenEffectsTab;                              // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Buttons_Border;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           CameraDistance;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           CameraRoll;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasScreenshotTaken;                             // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CaptureMouseArea;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CenterGrid_1;                                      // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Checkbox_C*                         CharacterRotation;                                 // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           ChromaticAberrationIntensity;                      // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           ChromaticAberrationOffset;                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           ColorBalanceBlue;                                  // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           ColorBalanceGreen;                                 // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           ColorBalanceIntensity;                             // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           ColorBalanceRed;                                   // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Selector_C*                         ColorBalanceSelector;                              // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ColorGradingMode;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_Album;                                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_ChangeTab;                                 // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_Close;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_Down;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_FreeCamera;                                // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_HideUI;                                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_Left;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_Mouse;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_Reset;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_Right;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_Swap;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_TakePicture;                               // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_CommandButton_C*                    Command_Up;                                        // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Divisor;                                           // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           FieldOfView;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           FilmGrain;                                         // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Selector_C*                         Filter;                                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           FocusDistance;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FocusDistanceTxt;                                  // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FocusDistanceTxt_1;                                // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               FocusRegion;                                       // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           FrameBlue;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           FrameGreen;                                        // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           FrameRed;                                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Selector_C*                         FrameSelector;                                     // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           FrameSize;                                         // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Checkbox_C*                         Grid;                                              // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           GRIDAutofocus;                                     // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Checkbox_C*                         HideCharacter;                                     // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_PhotoModeIsOn;                                 // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 imgFocusRegion;                                    // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Info_Border;                                       // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           LogoAngle;                                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           LogoHorizontalAlignment;                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Selector_C*                         LogoSelector;                                      // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           LogoSize;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           LogoVerticalAlignment;                             // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           LUTIntensity;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           MotionBlur;                                        // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MoveCameraKeys_CanvasPanel;                        // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PhotoModeIsOnHidedMenu;                            // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        PhotoModeWidget;                                   // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Selector_C*                         PhotoResolution;                                   // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PreviewPhoto;                                      // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Selector_C*                         Rendering;                                         // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           SensorWidth;                                       // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           Sharpness;                                         // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           Slider_SimplifiedContrast;                         // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           Slider_SimplifiedGamma;                            // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           Slider_SimplifiedSaturation;                       // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           Temperature;                                       // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_192;                                     // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextPhotoModeIsOn;                                 // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           Tint;                                              // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_381;                                   // 0x0590(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_C*                           Vignette;                                          // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherPM;                                  // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget*                                CurrentGenericWidgetElement;                       // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTab;                                        // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastTabIndex;                                      // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUsingFreeCamera;                                  // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class BP_FreeCamera::ABP_FreeCamera_C*        FreeCameraActor;                                   // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       FreeCameraComponent;                               // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               EditedCameraRoll;                                  // 0x05D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        EditedCameraFOV;                                   // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double FOVValue)> ED_FreeCameraFOV;                                  // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FRotator& RotationValue)> ED_FreeCameraRotation;                             // 0x0600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bShowingMouseCursor;                               // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMenuHidden;                                       // 0x0611(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanFocus;                                         // 0x0612(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_613[0x5];                                      // 0x0613(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Gallery_C*                          GalleryReference;                                  // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBPC_PhotoMode_C*                       PhotoModeComponentReference;                       // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bShowPhotoModeIsOnWarning_;                        // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsTakingPhoto;                                    // 0x0629(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62A[0x6];                                      // 0x062A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_Slider_C*>                   CommonSliders;                                     // 0x0630(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bResetSucess;                                      // 0x0640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_Selector_C*>                 SelectorSliders;                                   // 0x0648(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUI_Checkbox_C*>                 CommonCheckboxes;                                  // 0x0658(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bUsingAutofocus;                                   // 0x0668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UMeshComponent*, ECollisionResponse> PlayerMeshes;                                      // 0x0670(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FWeightedBlendable                     LogoWeightedBlend;                                 // 0x06C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FWeightedBlendable                     FrameWeightedBlend;                                // 0x06D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FWeightedBlendable                     FrameToAdd;                                        // 0x06E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bCanTakePhoto;                                     // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               LogoDynamicMaterial;                               // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               FrameDynamicMaterial;                              // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              ScreenshotResolution;                              // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     PostProcessMaterialToAdd;                          // 0x0710(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bHighResFunction;                                  // 0x0720(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_TabButton_C*>                CommonButtons;                                     // 0x0728(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bShowGrid_;                                        // 0x0738(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithUI;                                           // 0x0739(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73A[0x2];                                      // 0x073A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              DefaultUserScreenResolution;                       // 0x073C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bKeyboardInput;                                    // 0x0744(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGamepadInput;                                     // 0x0745(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpDownIsNowLeftRight;                             // 0x0746(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_747[0x1];                                      // 0x0747(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               LastControlRotation;                               // 0x0748(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCanUpdateMouseWheel;                              // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CameraLocation;                                    // 0x0768(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraDistanceTAL;                                 // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FOV;                                               // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Roll;                                              // 0x0790(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FKey                                   LastKeyPressed;                                    // 0x07A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        CameraMoveDelta;                                   // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LastScreenshotPath;                                // 0x07C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LastScreenshotName;                                // 0x07D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LastThumbnailPath;                                 // 0x07E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LastThumbnailName;                                 // 0x07F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bTurnToCamera;                                     // 0x0808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               PlayerRotationBackup;                              // 0x0810(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ABP_ScreenshotManager_C*                ScreenshotManagerRef;                              // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CurrentLogo;                                       // 0x0830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCurrentLogoSRGB;                                // 0x0838(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_839[0x7];                                      // 0x0839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               SharpnessMaterial;                                 // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_FocusPoint_C*                       FocusPoint;                                        // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          FocusOnClick;                                      // 0x0850(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CustomMotionBlur;                                  // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   ValidPostProcessSettings;                          // 0x0860(0x06F0)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ActiveTab(int32 TabIndex, class UUI_TabButton_C* ButtonToNotModify);
	void BlockScreenshot();
	void BndEvt__Aperture_K2Node_ComponentBoundEvent_33_OnOptionChanged__DelegateSignature(int32 OptionIndex, const class FText& OptionText);
	void BndEvt__Autofocus_K2Node_ComponentBoundEvent_5_OnCheckboxValueChanged__DelegateSignature(bool Value);
	void BndEvt__BlueCorrection_K2Node_ComponentBoundEvent_4_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__Brightness_K2Node_ComponentBoundEvent_3_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__CameraDistance_K2Node_ComponentBoundEvent_6_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__CameraRoll_K2Node_ComponentBoundEvent_7_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__CharacterRotation_K2Node_ComponentBoundEvent_3_OnCheckboxValueChanged__DelegateSignature(bool Value);
	void BndEvt__ChromaticAberrationIntensity_K2Node_ComponentBoundEvent_10_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__ChromaticAberrationOffset_K2Node_ComponentBoundEvent_11_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__ColorBalanceBlue_K2Node_ComponentBoundEvent_15_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__ColorBalanceGreen_K2Node_ComponentBoundEvent_16_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__ColorBalanceIntensity_K2Node_ComponentBoundEvent_17_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__ColorBalanceRed_K2Node_ComponentBoundEvent_18_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__ColorBalanceSelector_K2Node_ComponentBoundEvent_0_ResetDispatcher__DelegateSignature();
	void BndEvt__ColorBalanceSelector_K2Node_ComponentBoundEvent_32_OnOptionChanged__DelegateSignature(int32 OptionIndex, const class FText& OptionText);
	void BndEvt__Command_Album_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature();
	void BndEvt__Command_ChangeTab_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature();
	void BndEvt__Command_Close_K2Node_ComponentBoundEvent_7_OnPressed__DelegateSignature();
	void BndEvt__Command_Down_K2Node_ComponentBoundEvent_1_OnPressed__DelegateSignature();
	void BndEvt__Command_FreeCamera_K2Node_ComponentBoundEvent_4_OnPressed__DelegateSignature();
	void BndEvt__Command_HideUI_K2Node_ComponentBoundEvent_6_OnPressed__DelegateSignature();
	void BndEvt__Command_Left_K2Node_ComponentBoundEvent_2_OnPressed__DelegateSignature();
	void BndEvt__Command_Mouse_K2Node_ComponentBoundEvent_3_OnPressed__DelegateSignature();
	void BndEvt__Command_Reset_K2Node_ComponentBoundEvent_5_OnPressed__DelegateSignature();
	void BndEvt__Command_Right_K2Node_ComponentBoundEvent_3_OnPressed__DelegateSignature();
	void BndEvt__Command_Up_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature();
	void BndEvt__CommandButton_K2Node_ComponentBoundEvent_0_OnPressed__DelegateSignature();
	void BndEvt__FieldOfView_K2Node_ComponentBoundEvent_8_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__FilmGrain_K2Node_ComponentBoundEvent_12_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__Filter_K2Node_ComponentBoundEvent_31_OnOptionChanged__DelegateSignature(int32 OptionIndex, const class FText& OptionText);
	void BndEvt__FocusDistance_K2Node_ComponentBoundEvent_1_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__FrameBlue_K2Node_ComponentBoundEvent_19_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__FrameGreen_K2Node_ComponentBoundEvent_20_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__FrameRed_K2Node_ComponentBoundEvent_21_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__FrameSelector_K2Node_ComponentBoundEvent_29_OnOptionChanged__DelegateSignature(int32 OptionIndex, const class FText& OptionText);
	void BndEvt__FrameSize_K2Node_ComponentBoundEvent_22_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__Grid_K2Node_ComponentBoundEvent_6_OnCheckboxValueChanged__DelegateSignature(bool Value);
	void BndEvt__HideCharacter_K2Node_ComponentBoundEvent_4_OnCheckboxValueChanged__DelegateSignature(bool Value);
	void BndEvt__LogoAngle_K2Node_ComponentBoundEvent_23_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__LogoHorizontalAlignment_K2Node_ComponentBoundEvent_24_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__LogoSelector_K2Node_ComponentBoundEvent_27_OnOptionChanged__DelegateSignature(int32 OptionIndex, const class FText& OptionText);
	void BndEvt__LogoSize_K2Node_ComponentBoundEvent_25_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__LogoVerticalAlignment_K2Node_ComponentBoundEvent_26_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__LUTIntensity_K2Node_ComponentBoundEvent_9_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__MotionBlur_K2Node_ComponentBoundEvent_13_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__PhotoResolution_K2Node_ComponentBoundEvent_28_OnOptionChanged__DelegateSignature(int32 OptionIndex, const class FText& OptionText);
	void BndEvt__Rendering_K2Node_ComponentBoundEvent_30_OnOptionChanged__DelegateSignature(int32 OptionIndex, const class FText& OptionText);
	void BndEvt__SensorWidth_K2Node_ComponentBoundEvent_5_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__Slider_SimplifiedContrast_K2Node_ComponentBoundEvent_1_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__Slider_SimplifiedGamma_K2Node_ComponentBoundEvent_2_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__Slider_SimplifiedSaturation_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__Temperature_K2Node_ComponentBoundEvent_0_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__Tint_K2Node_ComponentBoundEvent_2_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void BndEvt__Vignette_K2Node_ComponentBoundEvent_14_OnSliderValueChanged__DelegateSignature(double SliderValue, bool bReset);
	void CameraDistanceMouseWheel(double Delta);
	void CameraLeftRight(double Value);
	class FText CameraModeTxt();
	void CameraUpDown(double Value);
	void ChangeFreeCameraFOV(double FOVValue);
	void ChangeFreeCameraRotation(const struct FRotator& RotationValue);
	void ChangeTab(int32 TabIndex);
	void CloseFreeCamera();
	void Construct();
	void Dispatchers();
	void ExecuteUbergraph_UI_PhotoMode(int32 EntryPoint);
	void Focus(const class UWidget*& WidgetItem);
	ESlateVisibility FocusDistanceVisibility();
	ESlateVisibility FreeCameraButtonVisibility();
	ESlateVisibility Get_Focus_Region_Visibility();
	void Get_Photo_Resolution(struct FIntPoint* Resolution);
	double getAdjustedWorldDeltaSeconds();
	void GetAnyKey(const struct FKey& Key);
	class FText GetFocusDistance();
	class FText getScreenshotTitle();
	ESlateVisibility GridVisibility();
	ESlateVisibility HideMenu();
	void Initialize();
	void InterpolationUpdater(double DeltaTime);
	ESlateVisibility LeftRightCameraGamepadVisibility();
	void MakeRegister();
	void MakeScreenshot();
	void MakeScreenshotRender();
	void MakeThumbnail();
	ESlateVisibility MoveButtonVisibility();
	void OnCameraMoved();
	void OnCameraStopped();
	void OnDestruct();
	void OnFreeCameraStart(class BP_FreeCamera::ABP_FreeCamera_C* FreeCameraReference);
	void OnFreenCameraEnd();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnLoaded_82A7579942174F38FE2AD9A2E247AA34(class UObject* Loaded);
	struct FEventReply OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void OpenFreeCamera();
	ESlateVisibility OpenGalleryButtonVisibility();
	void PreConstruct(bool IsDesignTime);
	void Register_Photo(const class FString& Save_New_Photo_Title, const class FString& Save_New_Photo_Photo_Full_Path, const class FString& Save_New_Photo_Thumbnail_Full_Path);
	void RemoveMaterialFromCamera(const TArray<struct FWeightedBlendable>& TargetArray, const struct FWeightedBlendable& Item);
	void ResetKeyboardIcons();
	void ResetShowMouseCursor();
	void Screenshot();
	void SendPhotoData(const struct FS_PhotosData& PhotoData);
	void Set_Focus_Distance(bool bIsHitValid, struct FPostProcessSettings& PostProcess, double Distance);
	void SetFocusBasedOnTab(int32 Index_0);
	void SetFocusOnClick();
	void SetMenuIcons(int32 Index_0);
	ESlateVisibility ShowHideCharacterRotation();
	ESlateVisibility ShowHideMouseButtonVisibility();
	class FText ShowHideMouseTxtButton();
	ESlateVisibility ShowHidePhotoModeIsOnWarning();
	void ShowMouse();
	ESlateVisibility SwapOptionGamepadVisibility();
	void TabToOpen(int32 TabIndex, class UUI_TabButton_C* CommonButtonPressed);
	ESlateVisibility TakePictureButtonVisibility();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	ESlateVisibility Up_Down_Left_Right_Buttons_Visibility();
	void Update_Logo_Color(bool bSRGB);
	ESlateVisibility UpDownCameraGamepadVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_PhotoMode_C">();
	}
	static class UUI_PhotoMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_PhotoMode_C>();
	}
};
static_assert(alignof(UUI_PhotoMode_C) == 0x000010, "Wrong alignment on UUI_PhotoMode_C");
static_assert(sizeof(UUI_PhotoMode_C) == 0x000F50, "Wrong size on UUI_PhotoMode_C");
static_assert(offsetof(UUI_PhotoMode_C, UberGraphFrame) == 0x0002E0, "Member 'UUI_PhotoMode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FocusUnderClick) == 0x0002E8, "Member 'UUI_PhotoMode_C::FocusUnderClick' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, OpenPhotoMode) == 0x0002F0, "Member 'UUI_PhotoMode_C::OpenPhotoMode' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, NotificationScreenshotTaken) == 0x0002F8, "Member 'UUI_PhotoMode_C::NotificationScreenshotTaken' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Aperture) == 0x000300, "Member 'UUI_PhotoMode_C::Aperture' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, APM_SizeMenu) == 0x000308, "Member 'UUI_PhotoMode_C::APM_SizeMenu' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Autofocus) == 0x000310, "Member 'UUI_PhotoMode_C::Autofocus' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, BorderScreenshotTaken) == 0x000318, "Member 'UUI_PhotoMode_C::BorderScreenshotTaken' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Brightness) == 0x000320, "Member 'UUI_PhotoMode_C::Brightness' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, btn_CameraTab) == 0x000328, "Member 'UUI_PhotoMode_C::btn_CameraTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, btn_ColorBalanceTab) == 0x000330, "Member 'UUI_PhotoMode_C::btn_ColorBalanceTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, btn_DepthOfFieldTab) == 0x000338, "Member 'UUI_PhotoMode_C::btn_DepthOfFieldTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, btn_DisplayTab) == 0x000340, "Member 'UUI_PhotoMode_C::btn_DisplayTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, btn_FiltersTab) == 0x000348, "Member 'UUI_PhotoMode_C::btn_FiltersTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, btn_FramesTab) == 0x000350, "Member 'UUI_PhotoMode_C::btn_FramesTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, btn_LogoTab) == 0x000358, "Member 'UUI_PhotoMode_C::btn_LogoTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, btn_ScreenEffectsTab) == 0x000360, "Member 'UUI_PhotoMode_C::btn_ScreenEffectsTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Buttons_Border) == 0x000368, "Member 'UUI_PhotoMode_C::Buttons_Border' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CameraDistance) == 0x000370, "Member 'UUI_PhotoMode_C::CameraDistance' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CameraRoll) == 0x000378, "Member 'UUI_PhotoMode_C::CameraRoll' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CanvasScreenshotTaken) == 0x000380, "Member 'UUI_PhotoMode_C::CanvasScreenshotTaken' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CaptureMouseArea) == 0x000388, "Member 'UUI_PhotoMode_C::CaptureMouseArea' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CenterGrid_1) == 0x000390, "Member 'UUI_PhotoMode_C::CenterGrid_1' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CharacterRotation) == 0x000398, "Member 'UUI_PhotoMode_C::CharacterRotation' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ChromaticAberrationIntensity) == 0x0003A0, "Member 'UUI_PhotoMode_C::ChromaticAberrationIntensity' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ChromaticAberrationOffset) == 0x0003A8, "Member 'UUI_PhotoMode_C::ChromaticAberrationOffset' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ColorBalanceBlue) == 0x0003B0, "Member 'UUI_PhotoMode_C::ColorBalanceBlue' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ColorBalanceGreen) == 0x0003B8, "Member 'UUI_PhotoMode_C::ColorBalanceGreen' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ColorBalanceIntensity) == 0x0003C0, "Member 'UUI_PhotoMode_C::ColorBalanceIntensity' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ColorBalanceRed) == 0x0003C8, "Member 'UUI_PhotoMode_C::ColorBalanceRed' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ColorBalanceSelector) == 0x0003D0, "Member 'UUI_PhotoMode_C::ColorBalanceSelector' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ColorGradingMode) == 0x0003D8, "Member 'UUI_PhotoMode_C::ColorGradingMode' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_Album) == 0x0003E0, "Member 'UUI_PhotoMode_C::Command_Album' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_ChangeTab) == 0x0003E8, "Member 'UUI_PhotoMode_C::Command_ChangeTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_Close) == 0x0003F0, "Member 'UUI_PhotoMode_C::Command_Close' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_Down) == 0x0003F8, "Member 'UUI_PhotoMode_C::Command_Down' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_FreeCamera) == 0x000400, "Member 'UUI_PhotoMode_C::Command_FreeCamera' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_HideUI) == 0x000408, "Member 'UUI_PhotoMode_C::Command_HideUI' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_Left) == 0x000410, "Member 'UUI_PhotoMode_C::Command_Left' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_Mouse) == 0x000418, "Member 'UUI_PhotoMode_C::Command_Mouse' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_Reset) == 0x000420, "Member 'UUI_PhotoMode_C::Command_Reset' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_Right) == 0x000428, "Member 'UUI_PhotoMode_C::Command_Right' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_Swap) == 0x000430, "Member 'UUI_PhotoMode_C::Command_Swap' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_TakePicture) == 0x000438, "Member 'UUI_PhotoMode_C::Command_TakePicture' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Command_Up) == 0x000440, "Member 'UUI_PhotoMode_C::Command_Up' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Divisor) == 0x000448, "Member 'UUI_PhotoMode_C::Divisor' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FieldOfView) == 0x000450, "Member 'UUI_PhotoMode_C::FieldOfView' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FilmGrain) == 0x000458, "Member 'UUI_PhotoMode_C::FilmGrain' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Filter) == 0x000460, "Member 'UUI_PhotoMode_C::Filter' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FocusDistance) == 0x000468, "Member 'UUI_PhotoMode_C::FocusDistance' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FocusDistanceTxt) == 0x000470, "Member 'UUI_PhotoMode_C::FocusDistanceTxt' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FocusDistanceTxt_1) == 0x000478, "Member 'UUI_PhotoMode_C::FocusDistanceTxt_1' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FocusRegion) == 0x000480, "Member 'UUI_PhotoMode_C::FocusRegion' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FrameBlue) == 0x000488, "Member 'UUI_PhotoMode_C::FrameBlue' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FrameGreen) == 0x000490, "Member 'UUI_PhotoMode_C::FrameGreen' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FrameRed) == 0x000498, "Member 'UUI_PhotoMode_C::FrameRed' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FrameSelector) == 0x0004A0, "Member 'UUI_PhotoMode_C::FrameSelector' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FrameSize) == 0x0004A8, "Member 'UUI_PhotoMode_C::FrameSize' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Grid) == 0x0004B0, "Member 'UUI_PhotoMode_C::Grid' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, GRIDAutofocus) == 0x0004B8, "Member 'UUI_PhotoMode_C::GRIDAutofocus' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, HideCharacter) == 0x0004C0, "Member 'UUI_PhotoMode_C::HideCharacter' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, img_PhotoModeIsOn) == 0x0004C8, "Member 'UUI_PhotoMode_C::img_PhotoModeIsOn' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, imgFocusRegion) == 0x0004D0, "Member 'UUI_PhotoMode_C::imgFocusRegion' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Info_Border) == 0x0004D8, "Member 'UUI_PhotoMode_C::Info_Border' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LogoAngle) == 0x0004E0, "Member 'UUI_PhotoMode_C::LogoAngle' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LogoHorizontalAlignment) == 0x0004E8, "Member 'UUI_PhotoMode_C::LogoHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LogoSelector) == 0x0004F0, "Member 'UUI_PhotoMode_C::LogoSelector' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LogoSize) == 0x0004F8, "Member 'UUI_PhotoMode_C::LogoSize' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LogoVerticalAlignment) == 0x000500, "Member 'UUI_PhotoMode_C::LogoVerticalAlignment' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LUTIntensity) == 0x000508, "Member 'UUI_PhotoMode_C::LUTIntensity' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, MotionBlur) == 0x000510, "Member 'UUI_PhotoMode_C::MotionBlur' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, MoveCameraKeys_CanvasPanel) == 0x000518, "Member 'UUI_PhotoMode_C::MoveCameraKeys_CanvasPanel' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, PhotoModeIsOnHidedMenu) == 0x000520, "Member 'UUI_PhotoMode_C::PhotoModeIsOnHidedMenu' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, PhotoModeWidget) == 0x000528, "Member 'UUI_PhotoMode_C::PhotoModeWidget' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, PhotoResolution) == 0x000530, "Member 'UUI_PhotoMode_C::PhotoResolution' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, PreviewPhoto) == 0x000538, "Member 'UUI_PhotoMode_C::PreviewPhoto' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Rendering) == 0x000540, "Member 'UUI_PhotoMode_C::Rendering' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, SensorWidth) == 0x000548, "Member 'UUI_PhotoMode_C::SensorWidth' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Sharpness) == 0x000550, "Member 'UUI_PhotoMode_C::Sharpness' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Slider_SimplifiedContrast) == 0x000558, "Member 'UUI_PhotoMode_C::Slider_SimplifiedContrast' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Slider_SimplifiedGamma) == 0x000560, "Member 'UUI_PhotoMode_C::Slider_SimplifiedGamma' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Slider_SimplifiedSaturation) == 0x000568, "Member 'UUI_PhotoMode_C::Slider_SimplifiedSaturation' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Temperature) == 0x000570, "Member 'UUI_PhotoMode_C::Temperature' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, TextBlock_192) == 0x000578, "Member 'UUI_PhotoMode_C::TextBlock_192' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, TextPhotoModeIsOn) == 0x000580, "Member 'UUI_PhotoMode_C::TextPhotoModeIsOn' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Tint) == 0x000588, "Member 'UUI_PhotoMode_C::Tint' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, VerticalBox_381) == 0x000590, "Member 'UUI_PhotoMode_C::VerticalBox_381' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Vignette) == 0x000598, "Member 'UUI_PhotoMode_C::Vignette' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, WidgetSwitcherPM) == 0x0005A0, "Member 'UUI_PhotoMode_C::WidgetSwitcherPM' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CurrentGenericWidgetElement) == 0x0005A8, "Member 'UUI_PhotoMode_C::CurrentGenericWidgetElement' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CurrentTab) == 0x0005B0, "Member 'UUI_PhotoMode_C::CurrentTab' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LastTabIndex) == 0x0005B4, "Member 'UUI_PhotoMode_C::LastTabIndex' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bUsingFreeCamera) == 0x0005B8, "Member 'UUI_PhotoMode_C::bUsingFreeCamera' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FreeCameraActor) == 0x0005C0, "Member 'UUI_PhotoMode_C::FreeCameraActor' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FreeCameraComponent) == 0x0005C8, "Member 'UUI_PhotoMode_C::FreeCameraComponent' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, EditedCameraRoll) == 0x0005D0, "Member 'UUI_PhotoMode_C::EditedCameraRoll' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, EditedCameraFOV) == 0x0005E8, "Member 'UUI_PhotoMode_C::EditedCameraFOV' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ED_FreeCameraFOV) == 0x0005F0, "Member 'UUI_PhotoMode_C::ED_FreeCameraFOV' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ED_FreeCameraRotation) == 0x000600, "Member 'UUI_PhotoMode_C::ED_FreeCameraRotation' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bShowingMouseCursor) == 0x000610, "Member 'UUI_PhotoMode_C::bShowingMouseCursor' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bMenuHidden) == 0x000611, "Member 'UUI_PhotoMode_C::bMenuHidden' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bCanFocus) == 0x000612, "Member 'UUI_PhotoMode_C::bCanFocus' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, GalleryReference) == 0x000618, "Member 'UUI_PhotoMode_C::GalleryReference' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, PhotoModeComponentReference) == 0x000620, "Member 'UUI_PhotoMode_C::PhotoModeComponentReference' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bShowPhotoModeIsOnWarning_) == 0x000628, "Member 'UUI_PhotoMode_C::bShowPhotoModeIsOnWarning_' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bIsTakingPhoto) == 0x000629, "Member 'UUI_PhotoMode_C::bIsTakingPhoto' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CommonSliders) == 0x000630, "Member 'UUI_PhotoMode_C::CommonSliders' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bResetSucess) == 0x000640, "Member 'UUI_PhotoMode_C::bResetSucess' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, SelectorSliders) == 0x000648, "Member 'UUI_PhotoMode_C::SelectorSliders' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CommonCheckboxes) == 0x000658, "Member 'UUI_PhotoMode_C::CommonCheckboxes' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bUsingAutofocus) == 0x000668, "Member 'UUI_PhotoMode_C::bUsingAutofocus' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, PlayerMeshes) == 0x000670, "Member 'UUI_PhotoMode_C::PlayerMeshes' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LogoWeightedBlend) == 0x0006C0, "Member 'UUI_PhotoMode_C::LogoWeightedBlend' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FrameWeightedBlend) == 0x0006D0, "Member 'UUI_PhotoMode_C::FrameWeightedBlend' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FrameToAdd) == 0x0006E0, "Member 'UUI_PhotoMode_C::FrameToAdd' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bCanTakePhoto) == 0x0006F0, "Member 'UUI_PhotoMode_C::bCanTakePhoto' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LogoDynamicMaterial) == 0x0006F8, "Member 'UUI_PhotoMode_C::LogoDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FrameDynamicMaterial) == 0x000700, "Member 'UUI_PhotoMode_C::FrameDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ScreenshotResolution) == 0x000708, "Member 'UUI_PhotoMode_C::ScreenshotResolution' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, PostProcessMaterialToAdd) == 0x000710, "Member 'UUI_PhotoMode_C::PostProcessMaterialToAdd' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bHighResFunction) == 0x000720, "Member 'UUI_PhotoMode_C::bHighResFunction' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CommonButtons) == 0x000728, "Member 'UUI_PhotoMode_C::CommonButtons' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bShowGrid_) == 0x000738, "Member 'UUI_PhotoMode_C::bShowGrid_' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bWithUI) == 0x000739, "Member 'UUI_PhotoMode_C::bWithUI' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, DefaultUserScreenResolution) == 0x00073C, "Member 'UUI_PhotoMode_C::DefaultUserScreenResolution' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bKeyboardInput) == 0x000744, "Member 'UUI_PhotoMode_C::bKeyboardInput' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bGamepadInput) == 0x000745, "Member 'UUI_PhotoMode_C::bGamepadInput' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bUpDownIsNowLeftRight) == 0x000746, "Member 'UUI_PhotoMode_C::bUpDownIsNowLeftRight' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LastControlRotation) == 0x000748, "Member 'UUI_PhotoMode_C::LastControlRotation' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bCanUpdateMouseWheel) == 0x000760, "Member 'UUI_PhotoMode_C::bCanUpdateMouseWheel' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CameraLocation) == 0x000768, "Member 'UUI_PhotoMode_C::CameraLocation' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CameraDistanceTAL) == 0x000780, "Member 'UUI_PhotoMode_C::CameraDistanceTAL' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FOV) == 0x000788, "Member 'UUI_PhotoMode_C::FOV' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, Roll) == 0x000790, "Member 'UUI_PhotoMode_C::Roll' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LastKeyPressed) == 0x0007A8, "Member 'UUI_PhotoMode_C::LastKeyPressed' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CameraMoveDelta) == 0x0007C0, "Member 'UUI_PhotoMode_C::CameraMoveDelta' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LastScreenshotPath) == 0x0007C8, "Member 'UUI_PhotoMode_C::LastScreenshotPath' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LastScreenshotName) == 0x0007D8, "Member 'UUI_PhotoMode_C::LastScreenshotName' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LastThumbnailPath) == 0x0007E8, "Member 'UUI_PhotoMode_C::LastThumbnailPath' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, LastThumbnailName) == 0x0007F8, "Member 'UUI_PhotoMode_C::LastThumbnailName' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bTurnToCamera) == 0x000808, "Member 'UUI_PhotoMode_C::bTurnToCamera' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, PlayerRotationBackup) == 0x000810, "Member 'UUI_PhotoMode_C::PlayerRotationBackup' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ScreenshotManagerRef) == 0x000828, "Member 'UUI_PhotoMode_C::ScreenshotManagerRef' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CurrentLogo) == 0x000830, "Member 'UUI_PhotoMode_C::CurrentLogo' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, bIsCurrentLogoSRGB) == 0x000838, "Member 'UUI_PhotoMode_C::bIsCurrentLogoSRGB' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, SharpnessMaterial) == 0x000840, "Member 'UUI_PhotoMode_C::SharpnessMaterial' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FocusPoint) == 0x000848, "Member 'UUI_PhotoMode_C::FocusPoint' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, FocusOnClick) == 0x000850, "Member 'UUI_PhotoMode_C::FocusOnClick' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, CustomMotionBlur) == 0x000858, "Member 'UUI_PhotoMode_C::CustomMotionBlur' has a wrong offset!");
static_assert(offsetof(UUI_PhotoMode_C, ValidPostProcessSettings) == 0x000860, "Member 'UUI_PhotoMode_C::ValidPostProcessSettings' has a wrong offset!");

}

