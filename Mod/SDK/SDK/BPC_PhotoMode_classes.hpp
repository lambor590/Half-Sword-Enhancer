#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_PhotoMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "InputCore_structs.hpp"
#include "E_PauseGameMethod_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_CameraModes_structs.hpp"
#include "S_Logos_structs.hpp"
#include "S_PostProcessFilter_structs.hpp"
#include "CinematicCamera_structs.hpp"
#include "S_PostProcessRendering_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_InputKeys_structs.hpp"
#include "E_ScreenshotMethod_structs.hpp"
#include "S_PhotoModeIsOnConfis_structs.hpp"
#include "E_InputMode_structs.hpp"
#include "S_PhotoResolutions_structs.hpp"
#include "E_ColorGradingMode_structs.hpp"
#include "E_SaveSort_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_PhotoMode.BPC_PhotoMode_C
// 0x23C0 (0x2460 - 0x00A0)
class UBPC_PhotoMode_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_PhotoMode_C*                        PhotoModeWidgetRef;                                // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             PlayerRef;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArmRef;                                      // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CameraRef;                                         // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsUsingPhotoMode;                                 // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPauseGameInPhotoMode;                             // 0x00C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bApplyMenuColor;                                   // 0x00CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            MenuColor;                                         // 0x00CC(0x0014)(Edit, BlueprintVisible)
	bool                                          bPauseGameInGallery;                               // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PauseGameMethod                             PauseGameMethod;                                   // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CameraModes                                 CameraModes;                                       // 0x00E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PhotoModeViewportZOrder;                           // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowMouseCursorByDefault;                         // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowPhotoResolutionOption;                        // 0x00E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowMouseCursorOption;                            // 0x00EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFreeCameraOption;                                 // 0x00EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseMaximumDistanceLimit;                          // 0x00EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FreeCameraMaximumDistance;                         // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstPersonGame;                                // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowTakePictureOption;                            // 0x00F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResetControlRotationAfterClosingPM;               // 0x00FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxUpDownCameraDistance;                           // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxLeftRightCameraDistance;                        // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Logos>                       GameLogos;                                         // 0x0110(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_PostProcessFilter>           Filters;                                           // 0x0120(0x0010)(Edit, BlueprintVisible)
	double                                        DefaultFOV;                                        // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DefaultCameraRotation;                             // 0x0138(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FPostProcessSettings                   DefaultPostProcess;                                // 0x0150(0x06F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsUsingGallery;                                   // 0x0840(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_841[0xF];                                      // 0x0841(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   DefaultPhotoModePostProcess;                       // 0x0850(0x06F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPostProcessSettings                   MenuPhotoModePostProcess;                          // 0x0F40(0x06F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         GamepadIconsDTIndex;                               // 0x1630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1634[0x4];                                     // 0x1634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InputKeys                           TakeScreenshotKeys;                                // 0x1638(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           OpenGalleryKeys;                                   // 0x1668(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           HideMenuKeys;                                      // 0x1698(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           ResetValuesKeys;                                   // 0x16C8(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           NextTabKeys;                                       // 0x16F8(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           PrevTabKeys;                                       // 0x1728(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           OpenClosePhotoModeKeys;                            // 0x1758(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           ClosePhotoModeWithAnotherKey;                      // 0x1788(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           ShowOrHideMouseCursorKeys;                         // 0x17B8(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           OpenFreeCameraKeys;                                // 0x17E8(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           UpCameraKeys;                                      // 0x1818(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           DownCameraKeys;                                    // 0x1848(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FKey                                   LastKey;                                           // 0x1878(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	double                                        DefaultSpringArmLength;                            // 0x1890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMouseCursor;                                      // 0x1898(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1899[0x7];                                     // 0x1899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_PostProcessRendering>        PostProcessMaterials;                              // 0x18A0(0x0010)(Edit, BlueprintVisible)
	struct FVector                                DefaultSocketOffset;                               // 0x18B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ScreenshotMethod                            ScreenshotMethod;                                  // 0x18C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUseCustomScreenshotFolder;                        // 0x18C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_18CA[0x6];                                     // 0x18CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomScreenshotFolderPath;                        // 0x18D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class APlayerController*                      PlayerControllerRef;                               // 0x18E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableGallery;                                    // 0x18E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18E9[0x7];                                     // 0x18E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Gallery_C*                          GalleryWidgetRef;                                  // 0x18F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InputKeys                           NextPageKeys__Gallery_;                            // 0x18F8(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           PrevPageKeys__Gallery_;                            // 0x1928(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           FullscreenKeys__Gallery_;                          // 0x1958(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           BackKeys__Gallery_;                                // 0x1988(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           ShowMouseKeys__Gallery_;                           // 0x19B8(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          bAutoSizePerTab;                                   // 0x19E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFocusWhenHoveringOverSlider;                      // 0x19E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19EA[0x6];                                     // 0x19EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PhotoModeIsOnConfis                 PhotoModeIsOnWarning;                              // 0x19F0(0x0060)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FRotator                               DefaultControlRotation;                            // 0x1A50(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bExistingPostProcess;                              // 0x1A68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A69[0x7];                                     // 0x1A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PostProcessVolumeClass;                            // 0x1A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsUnbound;                                        // 0x1A78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A79[0x7];                                     // 0x1A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   OriginalPostProcess;                               // 0x1A80(0x06F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        GlobalTimeDilationBackup;                          // 0x2170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InputMode                                   InputModeAfterClosingPhotoMode;                    // 0x2178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowAlbumOption;                                  // 0x2179(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_217A[0x6];                                     // 0x217A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentTimeDilation;                               // 0x2180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InputKeys                           LeftCameraKeys;                                    // 0x2188(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           RightCameraKeys;                                   // 0x21B8(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InputKeys                           OpenPhotoModeKeys__Gallery_;                       // 0x21E8(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double CurrentTimeDilation)> PhotoModeOpened;                                   // 0x2218(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              PhotoModeClosed;                                   // 0x2228(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bShowCharacterRotationOption;                      // 0x2238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bControllerTickBackup;                             // 0x2239(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisableControllerInputOnFreeCamera;               // 0x223A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisablePawnInputOnFreeCamera;                     // 0x223B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsYourSpringArmTickableWhenPaused;                // 0x223C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsYourCameraTickableWhenPaused;                   // 0x223D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223E[0x2];                                     // 0x223E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const class FString& PhotoPath, const class FString& ThumbPath)> PhotoTaken;                                        // 0x2240(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABP_CustomPostProcess_C*                CustomPostProcessManager;                          // 0x2250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_PhotoResolutions>            PhotoResolutions;                                  // 0x2258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIncludeDefaultScreenResolutionOption;             // 0x2268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIncludePhotoWithUIOption;                         // 0x2269(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_226A[0x6];                                     // 0x226A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, double>                   Apertures;                                         // 0x2270(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_ColorGradingMode                            ColorGradingMode;                                  // 0x22C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C1[0x7];                                     // 0x22C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DefaultFocalLength;                                // 0x22C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraFocusSettings                   DefaultFocusSettings;                              // 0x22D0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        DefaultAperture;                                   // 0x2330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, TSoftObjectPtr<class UTexture2D>> Borders;                                           // 0x2338(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_SaveSort                                    SavePhotosSort;                                    // 0x2388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2389[0x7];                                     // 0x2389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class BP_FreeCamera_0::ABP_FreeCamera_C* FreeCameraReference)> OnFreeCameraStart;                                 // 0x2390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnFreenCameraEnd;                                  // 0x23A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ETraceTypeQuery                               FocusCollisionType;                                // 0x23B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_23B1[0x7];                                     // 0x23B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InputKeys                           ExtraFunctionDeleteKeys__Gallery_;                 // 0x23B8(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        RotationSensitivity;                               // 0x23E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotationInterpolationSpeed;                        // 0x23F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovementSensitivity;                               // 0x23F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovementInterpolationSpeed;                        // 0x2400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAllowCustomMotionBlur;                            // 0x2408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2409[0x7];                                     // 0x2409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UPrimitiveComponent*, bool>        CustomDepthComponents;                             // 0x2410(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void Calculate_Weight_by_Ref(class APostProcessVolume* PostProcessVolume, double& PropertyTotal, double& PropertyCount, double PropertyValue, double DistanceWeight);
	void Create_Post_Process();
	void ExecuteUbergraph_BPC_PhotoMode(int32 EntryPoint);
	void Get_Active_Camera(class UCameraComponent** CurrentCamera, class USpringArmComponent** CurrentSpringArm);
	void GetCameraLocation(struct FVector* CameraLocation);
	void GetCameraManager(class APlayerCameraManager** PlayerCameraManager);
	void getScreenshotPath(class FString* FullPath);
	void GetSliderCameraDistance(double* CameraDistance);
	void GetSliderFOV(double* FOV);
	void GetSliderRoll(double* Roll);
	void IconSelector___Gallery(const struct FKey& Key);
	void IconSelector___Photo_Mode_Menu(const struct FKey& Key);
	void InitWidgets();
	void OpenGallery(const struct FKey& LastKey_0);
	void Photo_Mode(const struct FKey& Key);
	void ReceiveBeginPlay();
	void ResetGallery();
	void ResetPhotoMode();
	void UnpausedGameAxisMovementControl(double AxisValueIn, double* AxisValueOut);
	void UpdateOutputFolder(const class FString& Custom_Path);
	void UpdateReferences(bool bCheckWidgets);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_PhotoMode_C">();
	}
	static class UBPC_PhotoMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_PhotoMode_C>();
	}
};
static_assert(alignof(UBPC_PhotoMode_C) == 0x000010, "Wrong alignment on UBPC_PhotoMode_C");
static_assert(sizeof(UBPC_PhotoMode_C) == 0x002460, "Wrong size on UBPC_PhotoMode_C");
static_assert(offsetof(UBPC_PhotoMode_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_PhotoMode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PhotoModeWidgetRef) == 0x0000A8, "Member 'UBPC_PhotoMode_C::PhotoModeWidgetRef' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PlayerRef) == 0x0000B0, "Member 'UBPC_PhotoMode_C::PlayerRef' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, SpringArmRef) == 0x0000B8, "Member 'UBPC_PhotoMode_C::SpringArmRef' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, CameraRef) == 0x0000C0, "Member 'UBPC_PhotoMode_C::CameraRef' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bIsUsingPhotoMode) == 0x0000C8, "Member 'UBPC_PhotoMode_C::bIsUsingPhotoMode' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bPauseGameInPhotoMode) == 0x0000C9, "Member 'UBPC_PhotoMode_C::bPauseGameInPhotoMode' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bApplyMenuColor) == 0x0000CA, "Member 'UBPC_PhotoMode_C::bApplyMenuColor' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, MenuColor) == 0x0000CC, "Member 'UBPC_PhotoMode_C::MenuColor' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bPauseGameInGallery) == 0x0000E0, "Member 'UBPC_PhotoMode_C::bPauseGameInGallery' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PauseGameMethod) == 0x0000E1, "Member 'UBPC_PhotoMode_C::PauseGameMethod' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, CameraModes) == 0x0000E2, "Member 'UBPC_PhotoMode_C::CameraModes' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PhotoModeViewportZOrder) == 0x0000E4, "Member 'UBPC_PhotoMode_C::PhotoModeViewportZOrder' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bShowMouseCursorByDefault) == 0x0000E8, "Member 'UBPC_PhotoMode_C::bShowMouseCursorByDefault' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bShowPhotoResolutionOption) == 0x0000E9, "Member 'UBPC_PhotoMode_C::bShowPhotoResolutionOption' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bShowMouseCursorOption) == 0x0000EA, "Member 'UBPC_PhotoMode_C::bShowMouseCursorOption' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bFreeCameraOption) == 0x0000EB, "Member 'UBPC_PhotoMode_C::bFreeCameraOption' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bUseMaximumDistanceLimit) == 0x0000EC, "Member 'UBPC_PhotoMode_C::bUseMaximumDistanceLimit' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, FreeCameraMaximumDistance) == 0x0000F0, "Member 'UBPC_PhotoMode_C::FreeCameraMaximumDistance' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bIsFirstPersonGame) == 0x0000F8, "Member 'UBPC_PhotoMode_C::bIsFirstPersonGame' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bShowTakePictureOption) == 0x0000F9, "Member 'UBPC_PhotoMode_C::bShowTakePictureOption' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bResetControlRotationAfterClosingPM) == 0x0000FA, "Member 'UBPC_PhotoMode_C::bResetControlRotationAfterClosingPM' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, MaxUpDownCameraDistance) == 0x000100, "Member 'UBPC_PhotoMode_C::MaxUpDownCameraDistance' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, MaxLeftRightCameraDistance) == 0x000108, "Member 'UBPC_PhotoMode_C::MaxLeftRightCameraDistance' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, GameLogos) == 0x000110, "Member 'UBPC_PhotoMode_C::GameLogos' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, Filters) == 0x000120, "Member 'UBPC_PhotoMode_C::Filters' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultFOV) == 0x000130, "Member 'UBPC_PhotoMode_C::DefaultFOV' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultCameraRotation) == 0x000138, "Member 'UBPC_PhotoMode_C::DefaultCameraRotation' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultPostProcess) == 0x000150, "Member 'UBPC_PhotoMode_C::DefaultPostProcess' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bIsUsingGallery) == 0x000840, "Member 'UBPC_PhotoMode_C::bIsUsingGallery' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultPhotoModePostProcess) == 0x000850, "Member 'UBPC_PhotoMode_C::DefaultPhotoModePostProcess' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, MenuPhotoModePostProcess) == 0x000F40, "Member 'UBPC_PhotoMode_C::MenuPhotoModePostProcess' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, GamepadIconsDTIndex) == 0x001630, "Member 'UBPC_PhotoMode_C::GamepadIconsDTIndex' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, TakeScreenshotKeys) == 0x001638, "Member 'UBPC_PhotoMode_C::TakeScreenshotKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, OpenGalleryKeys) == 0x001668, "Member 'UBPC_PhotoMode_C::OpenGalleryKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, HideMenuKeys) == 0x001698, "Member 'UBPC_PhotoMode_C::HideMenuKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, ResetValuesKeys) == 0x0016C8, "Member 'UBPC_PhotoMode_C::ResetValuesKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, NextTabKeys) == 0x0016F8, "Member 'UBPC_PhotoMode_C::NextTabKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PrevTabKeys) == 0x001728, "Member 'UBPC_PhotoMode_C::PrevTabKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, OpenClosePhotoModeKeys) == 0x001758, "Member 'UBPC_PhotoMode_C::OpenClosePhotoModeKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, ClosePhotoModeWithAnotherKey) == 0x001788, "Member 'UBPC_PhotoMode_C::ClosePhotoModeWithAnotherKey' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, ShowOrHideMouseCursorKeys) == 0x0017B8, "Member 'UBPC_PhotoMode_C::ShowOrHideMouseCursorKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, OpenFreeCameraKeys) == 0x0017E8, "Member 'UBPC_PhotoMode_C::OpenFreeCameraKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, UpCameraKeys) == 0x001818, "Member 'UBPC_PhotoMode_C::UpCameraKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DownCameraKeys) == 0x001848, "Member 'UBPC_PhotoMode_C::DownCameraKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, LastKey) == 0x001878, "Member 'UBPC_PhotoMode_C::LastKey' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultSpringArmLength) == 0x001890, "Member 'UBPC_PhotoMode_C::DefaultSpringArmLength' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bMouseCursor) == 0x001898, "Member 'UBPC_PhotoMode_C::bMouseCursor' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PostProcessMaterials) == 0x0018A0, "Member 'UBPC_PhotoMode_C::PostProcessMaterials' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultSocketOffset) == 0x0018B0, "Member 'UBPC_PhotoMode_C::DefaultSocketOffset' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, ScreenshotMethod) == 0x0018C8, "Member 'UBPC_PhotoMode_C::ScreenshotMethod' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bUseCustomScreenshotFolder) == 0x0018C9, "Member 'UBPC_PhotoMode_C::bUseCustomScreenshotFolder' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, CustomScreenshotFolderPath) == 0x0018D0, "Member 'UBPC_PhotoMode_C::CustomScreenshotFolderPath' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PlayerControllerRef) == 0x0018E0, "Member 'UBPC_PhotoMode_C::PlayerControllerRef' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bEnableGallery) == 0x0018E8, "Member 'UBPC_PhotoMode_C::bEnableGallery' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, GalleryWidgetRef) == 0x0018F0, "Member 'UBPC_PhotoMode_C::GalleryWidgetRef' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, NextPageKeys__Gallery_) == 0x0018F8, "Member 'UBPC_PhotoMode_C::NextPageKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PrevPageKeys__Gallery_) == 0x001928, "Member 'UBPC_PhotoMode_C::PrevPageKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, FullscreenKeys__Gallery_) == 0x001958, "Member 'UBPC_PhotoMode_C::FullscreenKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, BackKeys__Gallery_) == 0x001988, "Member 'UBPC_PhotoMode_C::BackKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, ShowMouseKeys__Gallery_) == 0x0019B8, "Member 'UBPC_PhotoMode_C::ShowMouseKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bAutoSizePerTab) == 0x0019E8, "Member 'UBPC_PhotoMode_C::bAutoSizePerTab' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bFocusWhenHoveringOverSlider) == 0x0019E9, "Member 'UBPC_PhotoMode_C::bFocusWhenHoveringOverSlider' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PhotoModeIsOnWarning) == 0x0019F0, "Member 'UBPC_PhotoMode_C::PhotoModeIsOnWarning' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultControlRotation) == 0x001A50, "Member 'UBPC_PhotoMode_C::DefaultControlRotation' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bExistingPostProcess) == 0x001A68, "Member 'UBPC_PhotoMode_C::bExistingPostProcess' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PostProcessVolumeClass) == 0x001A70, "Member 'UBPC_PhotoMode_C::PostProcessVolumeClass' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bIsUnbound) == 0x001A78, "Member 'UBPC_PhotoMode_C::bIsUnbound' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, OriginalPostProcess) == 0x001A80, "Member 'UBPC_PhotoMode_C::OriginalPostProcess' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, GlobalTimeDilationBackup) == 0x002170, "Member 'UBPC_PhotoMode_C::GlobalTimeDilationBackup' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, InputModeAfterClosingPhotoMode) == 0x002178, "Member 'UBPC_PhotoMode_C::InputModeAfterClosingPhotoMode' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bShowAlbumOption) == 0x002179, "Member 'UBPC_PhotoMode_C::bShowAlbumOption' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, CurrentTimeDilation) == 0x002180, "Member 'UBPC_PhotoMode_C::CurrentTimeDilation' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, LeftCameraKeys) == 0x002188, "Member 'UBPC_PhotoMode_C::LeftCameraKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, RightCameraKeys) == 0x0021B8, "Member 'UBPC_PhotoMode_C::RightCameraKeys' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, OpenPhotoModeKeys__Gallery_) == 0x0021E8, "Member 'UBPC_PhotoMode_C::OpenPhotoModeKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PhotoModeOpened) == 0x002218, "Member 'UBPC_PhotoMode_C::PhotoModeOpened' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PhotoModeClosed) == 0x002228, "Member 'UBPC_PhotoMode_C::PhotoModeClosed' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bShowCharacterRotationOption) == 0x002238, "Member 'UBPC_PhotoMode_C::bShowCharacterRotationOption' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bControllerTickBackup) == 0x002239, "Member 'UBPC_PhotoMode_C::bControllerTickBackup' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bDisableControllerInputOnFreeCamera) == 0x00223A, "Member 'UBPC_PhotoMode_C::bDisableControllerInputOnFreeCamera' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bDisablePawnInputOnFreeCamera) == 0x00223B, "Member 'UBPC_PhotoMode_C::bDisablePawnInputOnFreeCamera' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bIsYourSpringArmTickableWhenPaused) == 0x00223C, "Member 'UBPC_PhotoMode_C::bIsYourSpringArmTickableWhenPaused' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bIsYourCameraTickableWhenPaused) == 0x00223D, "Member 'UBPC_PhotoMode_C::bIsYourCameraTickableWhenPaused' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PhotoTaken) == 0x002240, "Member 'UBPC_PhotoMode_C::PhotoTaken' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, CustomPostProcessManager) == 0x002250, "Member 'UBPC_PhotoMode_C::CustomPostProcessManager' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, PhotoResolutions) == 0x002258, "Member 'UBPC_PhotoMode_C::PhotoResolutions' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bIncludeDefaultScreenResolutionOption) == 0x002268, "Member 'UBPC_PhotoMode_C::bIncludeDefaultScreenResolutionOption' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bIncludePhotoWithUIOption) == 0x002269, "Member 'UBPC_PhotoMode_C::bIncludePhotoWithUIOption' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, Apertures) == 0x002270, "Member 'UBPC_PhotoMode_C::Apertures' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, ColorGradingMode) == 0x0022C0, "Member 'UBPC_PhotoMode_C::ColorGradingMode' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultFocalLength) == 0x0022C8, "Member 'UBPC_PhotoMode_C::DefaultFocalLength' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultFocusSettings) == 0x0022D0, "Member 'UBPC_PhotoMode_C::DefaultFocusSettings' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, DefaultAperture) == 0x002330, "Member 'UBPC_PhotoMode_C::DefaultAperture' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, Borders) == 0x002338, "Member 'UBPC_PhotoMode_C::Borders' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, SavePhotosSort) == 0x002388, "Member 'UBPC_PhotoMode_C::SavePhotosSort' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, OnFreeCameraStart) == 0x002390, "Member 'UBPC_PhotoMode_C::OnFreeCameraStart' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, OnFreenCameraEnd) == 0x0023A0, "Member 'UBPC_PhotoMode_C::OnFreenCameraEnd' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, FocusCollisionType) == 0x0023B0, "Member 'UBPC_PhotoMode_C::FocusCollisionType' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, ExtraFunctionDeleteKeys__Gallery_) == 0x0023B8, "Member 'UBPC_PhotoMode_C::ExtraFunctionDeleteKeys__Gallery_' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, RotationSensitivity) == 0x0023E8, "Member 'UBPC_PhotoMode_C::RotationSensitivity' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, RotationInterpolationSpeed) == 0x0023F0, "Member 'UBPC_PhotoMode_C::RotationInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, MovementSensitivity) == 0x0023F8, "Member 'UBPC_PhotoMode_C::MovementSensitivity' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, MovementInterpolationSpeed) == 0x002400, "Member 'UBPC_PhotoMode_C::MovementInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, bAllowCustomMotionBlur) == 0x002408, "Member 'UBPC_PhotoMode_C::bAllowCustomMotionBlur' has a wrong offset!");
static_assert(offsetof(UBPC_PhotoMode_C, CustomDepthComponents) == 0x002410, "Member 'UBPC_PhotoMode_C::CustomDepthComponents' has a wrong offset!");

}

