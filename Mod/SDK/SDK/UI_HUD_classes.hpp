#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_HUD.UI_HUD_C
// 0x00C8 (0x03A8 - 0x02E0)
class UUI_HUD_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AimLockOff;                                        // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AimLockOn;                                         // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Aim;                                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AimLock;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ArmLDmg;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ArmRDmg;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Black;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HeadDmg;                                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HPDmg1;                                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HPDmg2;                                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HPDmg3;                                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LegLDmg;                                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LegRDmg;                                           // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextDisabled;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextHurt;                                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextWin;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Vignette;                                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Vignette_Pain;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Vignette_WakeUp;                                   // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WaterMark;                                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AWillie_BP_C*                           My_Player;                                         // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGI_Settings_C*                         GI_Settings;                                       // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_HalfSwordGameMode_C*                As_BP_Half_Sword_Game_Mode;                        // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Time_Fallen;                                       // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Aim_Lock_Is_Off();
	void Aim_Lock_Is_On();
	void Construct();
	void ExecuteUbergraph_UI_HUD(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_HUD_C">();
	}
	static class UUI_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_HUD_C>();
	}
};
static_assert(alignof(UUI_HUD_C) == 0x000008, "Wrong alignment on UUI_HUD_C");
static_assert(sizeof(UUI_HUD_C) == 0x0003A8, "Wrong size on UUI_HUD_C");
static_assert(offsetof(UUI_HUD_C, UberGraphFrame) == 0x0002E0, "Member 'UUI_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, AimLockOff) == 0x0002E8, "Member 'UUI_HUD_C::AimLockOff' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, AimLockOn) == 0x0002F0, "Member 'UUI_HUD_C::AimLockOn' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Aim) == 0x0002F8, "Member 'UUI_HUD_C::Aim' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, AimLock) == 0x000300, "Member 'UUI_HUD_C::AimLock' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, ArmLDmg) == 0x000308, "Member 'UUI_HUD_C::ArmLDmg' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, ArmRDmg) == 0x000310, "Member 'UUI_HUD_C::ArmRDmg' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Black) == 0x000318, "Member 'UUI_HUD_C::Black' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HeadDmg) == 0x000320, "Member 'UUI_HUD_C::HeadDmg' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HPDmg1) == 0x000328, "Member 'UUI_HUD_C::HPDmg1' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HPDmg2) == 0x000330, "Member 'UUI_HUD_C::HPDmg2' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HPDmg3) == 0x000338, "Member 'UUI_HUD_C::HPDmg3' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, LegLDmg) == 0x000340, "Member 'UUI_HUD_C::LegLDmg' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, LegRDmg) == 0x000348, "Member 'UUI_HUD_C::LegRDmg' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, TextDisabled) == 0x000350, "Member 'UUI_HUD_C::TextDisabled' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, TextHurt) == 0x000358, "Member 'UUI_HUD_C::TextHurt' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, TextWin) == 0x000360, "Member 'UUI_HUD_C::TextWin' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Vignette) == 0x000368, "Member 'UUI_HUD_C::Vignette' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Vignette_Pain) == 0x000370, "Member 'UUI_HUD_C::Vignette_Pain' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Vignette_WakeUp) == 0x000378, "Member 'UUI_HUD_C::Vignette_WakeUp' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, WaterMark) == 0x000380, "Member 'UUI_HUD_C::WaterMark' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, My_Player) == 0x000388, "Member 'UUI_HUD_C::My_Player' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, GI_Settings) == 0x000390, "Member 'UUI_HUD_C::GI_Settings' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, As_BP_Half_Sword_Game_Mode) == 0x000398, "Member 'UUI_HUD_C::As_BP_Half_Sword_Game_Mode' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Time_Fallen) == 0x0003A0, "Member 'UUI_HUD_C::Time_Fallen' has a wrong offset!");

}

