#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Arena_Cutting_Map

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Str_Equipment_Loadout_Old_structs.hpp"
#include "Enum_PlayCards_structs.hpp"
#include "ArmorSlots_Enum_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Arena_Cutting_Map.Arena_Cutting_Map_C
// 0x15E8 (0x1880 - 0x0298)
class AArena_Cutting_Map_C final : public ALevelScriptActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Timeline_1_NewTrack_0_0064C83E472FDBDCC75195AFA2CCCBD7; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_0064C83E472FDBDCC75195AFA2CCCBD7; // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_93DF08C747D7FE60501F86860911BA7D; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_93DF08C747D7FE60501F86860911BA7D; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AWillie_BP_C*                           Player__Temp_;                                     // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_HalfSwordGameMode_C*                HS_Game_Mode;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USG_Equipment_C*                        As_SG_Equipment;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_0;                                   // 0x02D8(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank;                                     // 0x0428(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AWillie_BP_C*                           Enemy__Temp_;                                      // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_1;                                   // 0x0580(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_2;                                   // 0x06D0(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_3;                                   // 0x0820(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_4;                                   // 0x0970(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_4_S;                                 // 0x0AC0(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_4_D;                                 // 0x0C10(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_5;                                   // 0x0D60(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_5_S;                                 // 0x0EB0(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_5_D;                                 // 0x1000(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_6;                                   // 0x1150(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_6_S;                                 // 0x12A0(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_7;                                   // 0x13F0(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_7_S;                                 // 0x1540(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Equipment_Loadout_Old             EquipmentRank_7_A;                                 // 0x1690(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          NewVar;                                            // 0x17E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_0;                                          // 0x17E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_1;                                          // 0x17E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E3[0x5];                                     // 0x17E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        Music;                                             // 0x17E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGI_Settings_C*                         As_GI_Settings;                                    // 0x17F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AWillie_BP_C*>                   Enemies;                                           // 0x17F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Match_Started;                                     // 0x1808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1809[0x3];                                     // 0x1809(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Player_Team;                                       // 0x180C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Enemy_Team;                                        // 0x1810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1814[0x4];                                     // 0x1814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Teams_Array;                                       // 0x1818(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	Enum_PlayCards                                Current_Play_Card;                                 // 0x1828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1829[0x3];                                     // 0x1829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NPC_Spawn_Index;                                   // 0x182C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NPC_Team;                                          // 0x1830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1834[0x4];                                     // 0x1834(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Weapon_Trash_List;                                 // 0x1838(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         Armor_Trash_List;                                  // 0x1848(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         NPC_Rank;                                          // 0x1858(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185C[0x4];                                     // 0x185C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      Player_2_Controller;                               // 0x1860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           Ground_Tiles;                                      // 0x1868(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBPC_RuntimeVertexPaintAndDetectionComponent_C* BPC_VP;                                            // 0x1878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Arena_Cutting_Map_TriggerVolume_0_K2Node_ActorBoundEvent_0_ActorBeginOverlapSignature__DelegateSignature(class AActor* OverlappedActor, class AActor* OtherActor);
	void BndEvt__Arena_Cutting_Map_TriggerVolume_1_K2Node_ActorBoundEvent_1_ActorBeginOverlapSignature__DelegateSignature(class AActor* OverlappedActor, class AActor* OtherActor);
	void BndEvt__Arena_Cutting_Map_TriggerVolume_2_K2Node_ActorBoundEvent_2_ActorBeginOverlapSignature__DelegateSignature(class AActor* OverlappedActor, class AActor* OtherActor);
	void BndEvt__Arena_Cutting_Map_TriggerVolume_3_K2Node_ActorBoundEvent_3_ActorBeginOverlapSignature__DelegateSignature(class AActor* OverlappedActor, class AActor* OtherActor);
	void BndEvt__Arena_Cutting_Map_TriggerVolume_4_K2Node_ActorBoundEvent_5_ActorBeginOverlapSignature__DelegateSignature(class AActor* OverlappedActor, class AActor* OtherActor);
	void BndEvt__Arena_Cutting_Map_TriggerVolume_5_K2Node_ActorBoundEvent_4_ActorBeginOverlapSignature__DelegateSignature(class AActor* OverlappedActor, class AActor* OtherActor);
	void Clean_Blood(float Amount_to_Apply);
	void Clear_Old_Actors();
	void ExecuteUbergraph_Arena_Cutting_Map(int32 EntryPoint);
	void LevelReset();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Arena_Cutting_Map_C">();
	}
	static class AArena_Cutting_Map_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArena_Cutting_Map_C>();
	}
};
static_assert(alignof(AArena_Cutting_Map_C) == 0x000008, "Wrong alignment on AArena_Cutting_Map_C");
static_assert(sizeof(AArena_Cutting_Map_C) == 0x001880, "Wrong size on AArena_Cutting_Map_C");
static_assert(offsetof(AArena_Cutting_Map_C, UberGraphFrame) == 0x000298, "Member 'AArena_Cutting_Map_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Timeline_1_NewTrack_0_0064C83E472FDBDCC75195AFA2CCCBD7) == 0x0002A0, "Member 'AArena_Cutting_Map_C::Timeline_1_NewTrack_0_0064C83E472FDBDCC75195AFA2CCCBD7' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Timeline_1__Direction_0064C83E472FDBDCC75195AFA2CCCBD7) == 0x0002A4, "Member 'AArena_Cutting_Map_C::Timeline_1__Direction_0064C83E472FDBDCC75195AFA2CCCBD7' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Timeline_1) == 0x0002A8, "Member 'AArena_Cutting_Map_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Timeline_0_NewTrack_0_93DF08C747D7FE60501F86860911BA7D) == 0x0002B0, "Member 'AArena_Cutting_Map_C::Timeline_0_NewTrack_0_93DF08C747D7FE60501F86860911BA7D' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Timeline_0__Direction_93DF08C747D7FE60501F86860911BA7D) == 0x0002B4, "Member 'AArena_Cutting_Map_C::Timeline_0__Direction_93DF08C747D7FE60501F86860911BA7D' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Timeline_0) == 0x0002B8, "Member 'AArena_Cutting_Map_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Player__Temp_) == 0x0002C0, "Member 'AArena_Cutting_Map_C::Player__Temp_' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, HS_Game_Mode) == 0x0002C8, "Member 'AArena_Cutting_Map_C::HS_Game_Mode' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, As_SG_Equipment) == 0x0002D0, "Member 'AArena_Cutting_Map_C::As_SG_Equipment' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_0) == 0x0002D8, "Member 'AArena_Cutting_Map_C::EquipmentRank_0' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank) == 0x000428, "Member 'AArena_Cutting_Map_C::EquipmentRank' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Enemy__Temp_) == 0x000578, "Member 'AArena_Cutting_Map_C::Enemy__Temp_' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_1) == 0x000580, "Member 'AArena_Cutting_Map_C::EquipmentRank_1' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_2) == 0x0006D0, "Member 'AArena_Cutting_Map_C::EquipmentRank_2' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_3) == 0x000820, "Member 'AArena_Cutting_Map_C::EquipmentRank_3' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_4) == 0x000970, "Member 'AArena_Cutting_Map_C::EquipmentRank_4' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_4_S) == 0x000AC0, "Member 'AArena_Cutting_Map_C::EquipmentRank_4_S' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_4_D) == 0x000C10, "Member 'AArena_Cutting_Map_C::EquipmentRank_4_D' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_5) == 0x000D60, "Member 'AArena_Cutting_Map_C::EquipmentRank_5' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_5_S) == 0x000EB0, "Member 'AArena_Cutting_Map_C::EquipmentRank_5_S' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_5_D) == 0x001000, "Member 'AArena_Cutting_Map_C::EquipmentRank_5_D' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_6) == 0x001150, "Member 'AArena_Cutting_Map_C::EquipmentRank_6' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_6_S) == 0x0012A0, "Member 'AArena_Cutting_Map_C::EquipmentRank_6_S' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_7) == 0x0013F0, "Member 'AArena_Cutting_Map_C::EquipmentRank_7' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_7_S) == 0x001540, "Member 'AArena_Cutting_Map_C::EquipmentRank_7_S' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, EquipmentRank_7_A) == 0x001690, "Member 'AArena_Cutting_Map_C::EquipmentRank_7_A' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, NewVar) == 0x0017E0, "Member 'AArena_Cutting_Map_C::NewVar' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, NewVar_0) == 0x0017E1, "Member 'AArena_Cutting_Map_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, NewVar_1) == 0x0017E2, "Member 'AArena_Cutting_Map_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Music) == 0x0017E8, "Member 'AArena_Cutting_Map_C::Music' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, As_GI_Settings) == 0x0017F0, "Member 'AArena_Cutting_Map_C::As_GI_Settings' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Enemies) == 0x0017F8, "Member 'AArena_Cutting_Map_C::Enemies' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Match_Started) == 0x001808, "Member 'AArena_Cutting_Map_C::Match_Started' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Player_Team) == 0x00180C, "Member 'AArena_Cutting_Map_C::Player_Team' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Enemy_Team) == 0x001810, "Member 'AArena_Cutting_Map_C::Enemy_Team' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Teams_Array) == 0x001818, "Member 'AArena_Cutting_Map_C::Teams_Array' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Current_Play_Card) == 0x001828, "Member 'AArena_Cutting_Map_C::Current_Play_Card' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, NPC_Spawn_Index) == 0x00182C, "Member 'AArena_Cutting_Map_C::NPC_Spawn_Index' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, NPC_Team) == 0x001830, "Member 'AArena_Cutting_Map_C::NPC_Team' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Weapon_Trash_List) == 0x001838, "Member 'AArena_Cutting_Map_C::Weapon_Trash_List' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Armor_Trash_List) == 0x001848, "Member 'AArena_Cutting_Map_C::Armor_Trash_List' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, NPC_Rank) == 0x001858, "Member 'AArena_Cutting_Map_C::NPC_Rank' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Player_2_Controller) == 0x001860, "Member 'AArena_Cutting_Map_C::Player_2_Controller' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, Ground_Tiles) == 0x001868, "Member 'AArena_Cutting_Map_C::Ground_Tiles' has a wrong offset!");
static_assert(offsetof(AArena_Cutting_Map_C, BPC_VP) == 0x001878, "Member 'AArena_Cutting_Map_C::BPC_VP' has a wrong offset!");

}

