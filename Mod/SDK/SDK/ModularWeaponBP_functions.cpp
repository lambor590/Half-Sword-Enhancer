#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModularWeaponBP

#include "Basic.hpp"

#include "ModularWeaponBP_classes.hpp"
#include "ModularWeaponBP_parameters.hpp"


namespace SDK
{

// Function ModularWeaponBP.ModularWeaponBP_C.BndEvt__ModularWeaponBP_BaseMesh_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AModularWeaponBP_C::BndEvt__ModularWeaponBP_BaseMesh_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "BndEvt__ModularWeaponBP_BaseMesh_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature");

	Params::ModularWeaponBP_C_BndEvt__ModularWeaponBP_BaseMesh_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.BndEvt__ModularWeaponBP_Grip_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AModularWeaponBP_C::BndEvt__ModularWeaponBP_Grip_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "BndEvt__ModularWeaponBP_Grip_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");

	Params::ModularWeaponBP_C_BndEvt__ModularWeaponBP_Grip_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.BndEvt__ModularWeaponBP_Guard_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AModularWeaponBP_C::BndEvt__ModularWeaponBP_Guard_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "BndEvt__ModularWeaponBP_Guard_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");

	Params::ModularWeaponBP_C_BndEvt__ModularWeaponBP_Guard_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.BndEvt__ModularWeaponBP_Head SubModule 1_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AModularWeaponBP_C::BndEvt__ModularWeaponBP_Head_SubModule_1_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "BndEvt__ModularWeaponBP_Head SubModule 1_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::ModularWeaponBP_C_BndEvt__ModularWeaponBP_Head_SubModule_1_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.BndEvt__ModularWeaponBP_Head_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AModularWeaponBP_C::BndEvt__ModularWeaponBP_Head_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "BndEvt__ModularWeaponBP_Head_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::ModularWeaponBP_C_BndEvt__ModularWeaponBP_Head_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.BndEvt__ModularWeaponBP_Pommel_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AModularWeaponBP_C::BndEvt__ModularWeaponBP_Pommel_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "BndEvt__ModularWeaponBP_Pommel_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature");

	Params::ModularWeaponBP_C_BndEvt__ModularWeaponBP_Pommel_K2Node_ComponentBoundEvent_3_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.BndEvt__ModularWeaponBP_SubModule 2_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AModularWeaponBP_C::BndEvt__ModularWeaponBP_SubModule_2_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "BndEvt__ModularWeaponBP_SubModule 2_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");

	Params::ModularWeaponBP_C_BndEvt__ModularWeaponBP_SubModule_2_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Clear Stuck Bone
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AModularWeaponBP_C::Clear_Stuck_Bone(class FName bone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Clear Stuck Bone");

	Params::ModularWeaponBP_C_Clear_Stuck_Bone Parms{};

	Parms.bone = bone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Collision Hit
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Hit_Component                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other_Actor_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal_Impulse_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AModularWeaponBP_C::Collision_Hit(class UPrimitiveComponent* Hit_Component, class AActor* Other_Actor_0, const struct FVector& Normal_Impulse_0, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Collision Hit");

	Params::ModularWeaponBP_C_Collision_Hit Parms{};

	Parms.Hit_Component = Hit_Component;
	Parms.Other_Actor_0 = Other_Actor_0;
	Parms.Normal_Impulse_0 = std::move(Normal_Impulse_0);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.ExecuteUbergraph_ModularWeaponBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AModularWeaponBP_C::ExecuteUbergraph_ModularWeaponBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "ExecuteUbergraph_ModularWeaponBP");

	Params::ModularWeaponBP_C_ExecuteUbergraph_ModularWeaponBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.GGAGA
// (BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::GGAGA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "GGAGA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AModularWeaponBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AModularWeaponBP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "ReceiveTick");

	Params::ModularWeaponBP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Refresh Collisions
// (BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::Refresh_Collisions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Refresh Collisions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Release All Jammed Bones
// (BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::Release_All_Jammed_Bones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Release All Jammed Bones");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Set Up Module
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             Part                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Part_Sk                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AModular_Weapon_Part_Master_C*    Spawned_Part                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Socket                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AModular_Weapon_Part_Master_C*    Sub_Module_1                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AModular_Weapon_Part_Master_C*    Sub_Module_2                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      Part_Static_Mesh                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void AModularWeaponBP_C::Set_Up_Module(class UStaticMeshComponent* Part, class USkeletalMeshComponent* Part_Sk, class AModular_Weapon_Part_Master_C* Spawned_Part, class USceneComponent* Socket, class AModular_Weapon_Part_Master_C* Sub_Module_1, class AModular_Weapon_Part_Master_C* Sub_Module_2, class UStaticMesh* Part_Static_Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Set Up Module");

	Params::ModularWeaponBP_C_Set_Up_Module Parms{};

	Parms.Part = Part;
	Parms.Part_Sk = Part_Sk;
	Parms.Spawned_Part = Spawned_Part;
	Parms.Socket = Socket;
	Parms.Sub_Module_1 = Sub_Module_1;
	Parms.Sub_Module_2 = Sub_Module_2;
	Parms.Part_Static_Mesh = Part_Static_Mesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Sheathed Mode
// (BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::Sheathed_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Sheathed Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Spawn Module
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Sub_Module_I                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Sub_Module_II                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AModular_Weapon_Part_Master_C*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
// class AModular_Weapon_Part_Master_C*    Sub_Module_1                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AModular_Weapon_Part_Master_C*    Sub_Module_2                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

class AModular_Weapon_Part_Master_C* AModularWeaponBP_C::Spawn_Module(const struct FVector& Scale, class UClass* InputPin, class UClass* Sub_Module_I, class UClass* Sub_Module_II, class AModular_Weapon_Part_Master_C** Sub_Module_1, class AModular_Weapon_Part_Master_C** Sub_Module_2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Spawn Module");

	Params::ModularWeaponBP_C_Spawn_Module Parms{};

	Parms.Scale = std::move(Scale);
	Parms.InputPin = InputPin;
	Parms.Sub_Module_I = Sub_Module_I;
	Parms.Sub_Module_II = Sub_Module_II;

	UObject::ProcessEvent(Func, &Parms);

	if (Sub_Module_1 != nullptr)
		*Sub_Module_1 = Parms.Sub_Module_1;

	if (Sub_Module_2 != nullptr)
		*Sub_Module_2 = Parms.Sub_Module_2;

	return Parms.ReturnValue;
}


// Function ModularWeaponBP.ModularWeaponBP_C.Temporary Disable Damage
// (BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::Temporary_Disable_Damage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Temporary Disable Damage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Turn Off Collision
// (BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::Turn_Off_Collision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Turn Off Collision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Turn On Collision
// (BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::Turn_On_Collision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Turn On Collision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Unsheathed Mode
// (BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::Unsheathed_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Unsheathed Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Vertex Paint
// (BlueprintCallable, BlueprintEvent)

void AModularWeaponBP_C::Vertex_Paint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Vertex Paint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ModularWeaponBP.ModularWeaponBP_C.Weapon HIt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Hit_Component                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Weapon_Velocity_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit_Result_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// double                                  EdgeAllignment_Dot                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Laser_temp_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AModularWeaponBP_C::Weapon_HIt(class UPrimitiveComponent* Hit_Component, const struct FVector& Weapon_Velocity_0, const struct FHitResult& Hit_Result_0, double EdgeAllignment_Dot, bool Laser_temp_, class UClass* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModularWeaponBP_C", "Weapon HIt");

	Params::ModularWeaponBP_C_Weapon_HIt Parms{};

	Parms.Hit_Component = Hit_Component;
	Parms.Weapon_Velocity_0 = std::move(Weapon_Velocity_0);
	Parms.Hit_Result_0 = std::move(Hit_Result_0);
	Parms.EdgeAllignment_Dot = EdgeAllignment_Dot;
	Parms.Laser_temp_ = Laser_temp_;
	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}

}

