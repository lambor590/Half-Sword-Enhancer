#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AI_BP

#include "Basic.hpp"

#include "MeleeCombatRange_Enum_structs.hpp"
#include "GripType_Enum_structs.hpp"
#include "AI_AttackStage_Enum_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "AI_Strafe_Enum_structs.hpp"
#include "AI_CombatBehavior_Enum_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AI_BP.AI_BP_C
// 0x0450 (0x0808 - 0x03B8)
class AAI_BP_C final : public ADetourCrowdAIController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AWillie_BP_C*                           Target;                                            // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AWillie_BP_C*                           My_Pawn;                                           // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Control_Rotation;                                  // 0x03D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Aim_Vector_AI;                                     // 0x03E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Blade_Stop;                                        // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AWillie_BP_C*>                   Out_Actors;                                        // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AWillie_BP_C*>                   Targets_Array;                                     // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	double                                        Approach_Distance;                                 // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Active_Weapon_Length;                              // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        My_Longest_Available_Weapon;                       // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Enemy_Longest_Available_Weapon;                    // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMeleeCombatRange_Enum                        Combat_Range;                                      // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        My_Weapon_Length_R_Default;                        // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        My_Weapon_Length_R_Alt;                            // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        My_Weapon_Length_L;                                // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                My_Pawn_Location__past_;                           // 0x0468(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                My_Pawn_Location_Prediction;                       // 0x0480(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Location__past_;                            // 0x0498(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Location_Prediction;                        // 0x04B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAI_CombatBehavior_Enum                       Combat_Behavior;                                   // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAI_Strafe_Enum                               Strafe_Enum;                                       // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Target_Look_Dot;                                   // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance_to_Target__Prediction_;                   // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance_To_Target;                                // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Move_To_Location;                                  // 0x04E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Strafing_Intent;                                   // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Attack_Intent;                                     // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Defend_Intent;                                     // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Retreat_Intent;                                    // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAI_AttackStage_Enum                          Attack_Stage_Enum;                                 // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Target_Height_Difference;                          // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Height_Difference_root_;                    // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Threat_Level;                                      // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Being_Threatened;                                  // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Random_Float_Seed;                                 // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Target_Found;                                      // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attck_Cooldown;                                    // 0x0551(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552[0x6];                                      // 0x0552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Change_Attack_Rate;                                // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          No_Hands;                                          // 0x0560(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        R_Weapon_Balance_Point__Temp_;                     // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        L_Weapon_Balance_Point__Temp_;                     // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Getting_Up;                                        // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Not_Stunned;                                       // 0x0579(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57A[0x6];                                      // 0x057A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Swing_Speed;                                       // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Block_Getting_Up;                                  // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Getting_Up_Time_Lapsed;                            // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Kneel;                                             // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Retreat;                                           // 0x0599(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Chasing_Time;                                      // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lost_Interest;                                     // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unarmed;                                           // 0x05A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          No_Weapons_In_Arms;                                // 0x05AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Right_Hand_Empty;                                  // 0x05AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Left_Hand_Empty;                                   // 0x05AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Weapon_Slot_Available;                             // 0x05AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE[0x2];                                      // 0x05AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AModularWeaponBP_C*                     Weapon_To_Pick_Up;                                 // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Weapom_To_Pick_Up_Location;                        // 0x05B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weapon_Pick_Up_Priority;                           // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AModularWeaponBP_C*                     Weapon_In_Search;                                  // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Parry_Rate;                                        // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Character_Initialized;                             // 0x05E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Just_Parried;                                      // 0x05E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_0;                                          // 0x05EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EB[0x5];                                      // 0x05EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Aim_Vector_AI_Proxy;                               // 0x05F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dodging;                                           // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attack_Finishing;                                  // 0x0609(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60A[0x6];                                      // 0x060A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Skill__Temp_;                                      // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        R_AI_Movement_Range;                               // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        L_AI_Movement_Range;                               // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AI_Kneel;                                          // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Just_Defended;                                     // 0x0629(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Riposte_CoolDown;                                  // 0x062A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62B[0x5];                                      // 0x062B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Tackle_Time;                                       // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Move_To_Location_0;                                // 0x0638(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Berserk_Rate;                                      // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Selection;                                         // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fearless;                                          // 0x065C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65D[0x3];                                      // 0x065D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Team_Int;                                          // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        My_Health;                                         // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        My_Stamina;                                        // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        My_Consciousness;                                  // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        My_All_Body_Tonus;                                 // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        My_Pain;                                           // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        My_Arm_R_Health;                                   // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        My_Arm_L_Health;                                   // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          My_R_Guarding;                                     // 0x06A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AI_Immediate_Threat;                               // 0x06A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pain_Shock;                                        // 0x06A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A3[0x5];                                      // 0x06A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        My_Running_Speed_Rate;                             // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          My_Fallen;                                         // 0x06B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          My_Is_Crouched;                                    // 0x06B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          My_Give_Up;                                        // 0x06B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AI_Thrusting;                                      // 0x06B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AI_Threat;                                         // 0x06B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B5[0x3];                                      // 0x06B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        R_Weapon_Def_Rating;                               // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        L_Weapon_Def_Rating;                               // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        R_Weapon_Stab_Rating;                              // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        L_Weapon_Stab_Rating;                              // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DED;                                               // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                My_Pawn_Spine_05_Loc;                              // 0x06E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGripType_Enum                                R_Grip_Type_Default;                               // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_Dualist;                                       // 0x06F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FA[0x6];                                      // 0x06FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                My_Head_Location;                                  // 0x0700(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               My_Pelvis_Rotation;                                // 0x0718(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               My_Pawn_Control_Rotation;                          // 0x0730(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Target_Fallen;                                     // 0x0748(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749[0x3];                                      // 0x0749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Target_is_targeted_by_num;                         // 0x074C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Target_Give_Up;                                    // 0x0750(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Target_Unarmed;                                    // 0x0751(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_752[0x6];                                      // 0x0752(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Target_Spine_05_Loc;                               // 0x0758(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target_Head_Loc;                                   // 0x0770(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Stamina;                                    // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Exhaustation;                               // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AI_Armor_Invincibility_Rate;                       // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Armor_Invincibility_Rate;                   // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Consciousness;                              // 0x07A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Target_All_Body_Tonus;                             // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGripType_Enum                                L_Grip_Type_Default;                               // 0x07B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x7];                                      // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Give_Up_Meter;                                     // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGripType_Enum                                R_Grip_Type_Current;                               // 0x07C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Offhand_Searching_Grip;                          // 0x07C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CA[0x6];                                      // 0x07CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Target_Rotation;                                   // 0x07D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Searching_Grip_Timer;                              // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Get_Up_Timer;                                      // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Use_Alt_Against_Armor_Rate;                        // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Enemy_Armor_Rate;                                  // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Attack();
	void Dash_Event();
	void ExecuteUbergraph_AI_BP(int32 EntryPoint);
	void Minus_Attack_Intent();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Stop_That_Blade();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AI_BP_C">();
	}
	static class AAI_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAI_BP_C>();
	}
};
static_assert(alignof(AAI_BP_C) == 0x000008, "Wrong alignment on AAI_BP_C");
static_assert(sizeof(AAI_BP_C) == 0x000808, "Wrong size on AAI_BP_C");
static_assert(offsetof(AAI_BP_C, UberGraphFrame) == 0x0003B8, "Member 'AAI_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target) == 0x0003C0, "Member 'AAI_BP_C::Target' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Pawn) == 0x0003C8, "Member 'AAI_BP_C::My_Pawn' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Control_Rotation) == 0x0003D0, "Member 'AAI_BP_C::Control_Rotation' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Aim_Vector_AI) == 0x0003E8, "Member 'AAI_BP_C::Aim_Vector_AI' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Blade_Stop) == 0x000400, "Member 'AAI_BP_C::Blade_Stop' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Out_Actors) == 0x000408, "Member 'AAI_BP_C::Out_Actors' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Targets_Array) == 0x000418, "Member 'AAI_BP_C::Targets_Array' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Approach_Distance) == 0x000428, "Member 'AAI_BP_C::Approach_Distance' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Active_Weapon_Length) == 0x000430, "Member 'AAI_BP_C::Active_Weapon_Length' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Longest_Available_Weapon) == 0x000438, "Member 'AAI_BP_C::My_Longest_Available_Weapon' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Enemy_Longest_Available_Weapon) == 0x000440, "Member 'AAI_BP_C::Enemy_Longest_Available_Weapon' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Combat_Range) == 0x000448, "Member 'AAI_BP_C::Combat_Range' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Weapon_Length_R_Default) == 0x000450, "Member 'AAI_BP_C::My_Weapon_Length_R_Default' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Weapon_Length_R_Alt) == 0x000458, "Member 'AAI_BP_C::My_Weapon_Length_R_Alt' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Weapon_Length_L) == 0x000460, "Member 'AAI_BP_C::My_Weapon_Length_L' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Pawn_Location__past_) == 0x000468, "Member 'AAI_BP_C::My_Pawn_Location__past_' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Pawn_Location_Prediction) == 0x000480, "Member 'AAI_BP_C::My_Pawn_Location_Prediction' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Location__past_) == 0x000498, "Member 'AAI_BP_C::Target_Location__past_' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Location_Prediction) == 0x0004B0, "Member 'AAI_BP_C::Target_Location_Prediction' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Combat_Behavior) == 0x0004C8, "Member 'AAI_BP_C::Combat_Behavior' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Strafe_Enum) == 0x0004C9, "Member 'AAI_BP_C::Strafe_Enum' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Look_Dot) == 0x0004D0, "Member 'AAI_BP_C::Target_Look_Dot' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Distance_to_Target__Prediction_) == 0x0004D8, "Member 'AAI_BP_C::Distance_to_Target__Prediction_' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Distance_To_Target) == 0x0004E0, "Member 'AAI_BP_C::Distance_To_Target' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Move_To_Location) == 0x0004E8, "Member 'AAI_BP_C::Move_To_Location' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Strafing_Intent) == 0x000500, "Member 'AAI_BP_C::Strafing_Intent' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Attack_Intent) == 0x000508, "Member 'AAI_BP_C::Attack_Intent' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Defend_Intent) == 0x000510, "Member 'AAI_BP_C::Defend_Intent' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Retreat_Intent) == 0x000518, "Member 'AAI_BP_C::Retreat_Intent' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Attack_Stage_Enum) == 0x000520, "Member 'AAI_BP_C::Attack_Stage_Enum' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Height_Difference) == 0x000528, "Member 'AAI_BP_C::Target_Height_Difference' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Height_Difference_root_) == 0x000530, "Member 'AAI_BP_C::Target_Height_Difference_root_' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Threat_Level) == 0x000538, "Member 'AAI_BP_C::Threat_Level' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Being_Threatened) == 0x000540, "Member 'AAI_BP_C::Being_Threatened' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Random_Float_Seed) == 0x000548, "Member 'AAI_BP_C::Random_Float_Seed' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Found) == 0x000550, "Member 'AAI_BP_C::Target_Found' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Attck_Cooldown) == 0x000551, "Member 'AAI_BP_C::Attck_Cooldown' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Change_Attack_Rate) == 0x000558, "Member 'AAI_BP_C::Change_Attack_Rate' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, No_Hands) == 0x000560, "Member 'AAI_BP_C::No_Hands' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, R_Weapon_Balance_Point__Temp_) == 0x000568, "Member 'AAI_BP_C::R_Weapon_Balance_Point__Temp_' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, L_Weapon_Balance_Point__Temp_) == 0x000570, "Member 'AAI_BP_C::L_Weapon_Balance_Point__Temp_' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Getting_Up) == 0x000578, "Member 'AAI_BP_C::Getting_Up' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Not_Stunned) == 0x000579, "Member 'AAI_BP_C::Not_Stunned' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Swing_Speed) == 0x000580, "Member 'AAI_BP_C::Swing_Speed' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Block_Getting_Up) == 0x000588, "Member 'AAI_BP_C::Block_Getting_Up' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Getting_Up_Time_Lapsed) == 0x000590, "Member 'AAI_BP_C::Getting_Up_Time_Lapsed' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Kneel) == 0x000598, "Member 'AAI_BP_C::Kneel' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Retreat) == 0x000599, "Member 'AAI_BP_C::Retreat' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Chasing_Time) == 0x0005A0, "Member 'AAI_BP_C::Chasing_Time' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Lost_Interest) == 0x0005A8, "Member 'AAI_BP_C::Lost_Interest' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Unarmed) == 0x0005A9, "Member 'AAI_BP_C::Unarmed' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, No_Weapons_In_Arms) == 0x0005AA, "Member 'AAI_BP_C::No_Weapons_In_Arms' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Right_Hand_Empty) == 0x0005AB, "Member 'AAI_BP_C::Right_Hand_Empty' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Left_Hand_Empty) == 0x0005AC, "Member 'AAI_BP_C::Left_Hand_Empty' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Weapon_Slot_Available) == 0x0005AD, "Member 'AAI_BP_C::Weapon_Slot_Available' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Weapon_To_Pick_Up) == 0x0005B0, "Member 'AAI_BP_C::Weapon_To_Pick_Up' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Weapom_To_Pick_Up_Location) == 0x0005B8, "Member 'AAI_BP_C::Weapom_To_Pick_Up_Location' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Weapon_Pick_Up_Priority) == 0x0005D0, "Member 'AAI_BP_C::Weapon_Pick_Up_Priority' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Weapon_In_Search) == 0x0005D8, "Member 'AAI_BP_C::Weapon_In_Search' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Parry_Rate) == 0x0005E0, "Member 'AAI_BP_C::Parry_Rate' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Character_Initialized) == 0x0005E8, "Member 'AAI_BP_C::Character_Initialized' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Just_Parried) == 0x0005E9, "Member 'AAI_BP_C::Just_Parried' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, NewVar_0) == 0x0005EA, "Member 'AAI_BP_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Aim_Vector_AI_Proxy) == 0x0005F0, "Member 'AAI_BP_C::Aim_Vector_AI_Proxy' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Dodging) == 0x000608, "Member 'AAI_BP_C::Dodging' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Attack_Finishing) == 0x000609, "Member 'AAI_BP_C::Attack_Finishing' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Skill__Temp_) == 0x000610, "Member 'AAI_BP_C::Skill__Temp_' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, R_AI_Movement_Range) == 0x000618, "Member 'AAI_BP_C::R_AI_Movement_Range' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, L_AI_Movement_Range) == 0x000620, "Member 'AAI_BP_C::L_AI_Movement_Range' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, AI_Kneel) == 0x000628, "Member 'AAI_BP_C::AI_Kneel' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Just_Defended) == 0x000629, "Member 'AAI_BP_C::Just_Defended' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Riposte_CoolDown) == 0x00062A, "Member 'AAI_BP_C::Riposte_CoolDown' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Tackle_Time) == 0x000630, "Member 'AAI_BP_C::Tackle_Time' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Move_To_Location_0) == 0x000638, "Member 'AAI_BP_C::Move_To_Location_0' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Berserk_Rate) == 0x000650, "Member 'AAI_BP_C::Berserk_Rate' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Selection) == 0x000658, "Member 'AAI_BP_C::Selection' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Fearless) == 0x00065C, "Member 'AAI_BP_C::Fearless' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Team_Int) == 0x000660, "Member 'AAI_BP_C::Team_Int' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Health) == 0x000668, "Member 'AAI_BP_C::My_Health' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Stamina) == 0x000670, "Member 'AAI_BP_C::My_Stamina' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Consciousness) == 0x000678, "Member 'AAI_BP_C::My_Consciousness' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_All_Body_Tonus) == 0x000680, "Member 'AAI_BP_C::My_All_Body_Tonus' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Pain) == 0x000688, "Member 'AAI_BP_C::My_Pain' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Arm_R_Health) == 0x000690, "Member 'AAI_BP_C::My_Arm_R_Health' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Arm_L_Health) == 0x000698, "Member 'AAI_BP_C::My_Arm_L_Health' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_R_Guarding) == 0x0006A0, "Member 'AAI_BP_C::My_R_Guarding' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, AI_Immediate_Threat) == 0x0006A1, "Member 'AAI_BP_C::AI_Immediate_Threat' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Pain_Shock) == 0x0006A2, "Member 'AAI_BP_C::Pain_Shock' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Running_Speed_Rate) == 0x0006A8, "Member 'AAI_BP_C::My_Running_Speed_Rate' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Fallen) == 0x0006B0, "Member 'AAI_BP_C::My_Fallen' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Is_Crouched) == 0x0006B1, "Member 'AAI_BP_C::My_Is_Crouched' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Give_Up) == 0x0006B2, "Member 'AAI_BP_C::My_Give_Up' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, AI_Thrusting) == 0x0006B3, "Member 'AAI_BP_C::AI_Thrusting' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, AI_Threat) == 0x0006B4, "Member 'AAI_BP_C::AI_Threat' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, R_Weapon_Def_Rating) == 0x0006B8, "Member 'AAI_BP_C::R_Weapon_Def_Rating' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, L_Weapon_Def_Rating) == 0x0006C0, "Member 'AAI_BP_C::L_Weapon_Def_Rating' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, R_Weapon_Stab_Rating) == 0x0006C8, "Member 'AAI_BP_C::R_Weapon_Stab_Rating' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, L_Weapon_Stab_Rating) == 0x0006D0, "Member 'AAI_BP_C::L_Weapon_Stab_Rating' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, DED) == 0x0006D8, "Member 'AAI_BP_C::DED' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Pawn_Spine_05_Loc) == 0x0006E0, "Member 'AAI_BP_C::My_Pawn_Spine_05_Loc' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, R_Grip_Type_Default) == 0x0006F8, "Member 'AAI_BP_C::R_Grip_Type_Default' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, NPC_Dualist) == 0x0006F9, "Member 'AAI_BP_C::NPC_Dualist' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Head_Location) == 0x000700, "Member 'AAI_BP_C::My_Head_Location' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Pelvis_Rotation) == 0x000718, "Member 'AAI_BP_C::My_Pelvis_Rotation' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, My_Pawn_Control_Rotation) == 0x000730, "Member 'AAI_BP_C::My_Pawn_Control_Rotation' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Fallen) == 0x000748, "Member 'AAI_BP_C::Target_Fallen' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_is_targeted_by_num) == 0x00074C, "Member 'AAI_BP_C::Target_is_targeted_by_num' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Give_Up) == 0x000750, "Member 'AAI_BP_C::Target_Give_Up' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Unarmed) == 0x000751, "Member 'AAI_BP_C::Target_Unarmed' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Spine_05_Loc) == 0x000758, "Member 'AAI_BP_C::Target_Spine_05_Loc' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Head_Loc) == 0x000770, "Member 'AAI_BP_C::Target_Head_Loc' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Stamina) == 0x000788, "Member 'AAI_BP_C::Target_Stamina' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Exhaustation) == 0x000790, "Member 'AAI_BP_C::Target_Exhaustation' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, AI_Armor_Invincibility_Rate) == 0x000798, "Member 'AAI_BP_C::AI_Armor_Invincibility_Rate' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Armor_Invincibility_Rate) == 0x0007A0, "Member 'AAI_BP_C::Target_Armor_Invincibility_Rate' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Consciousness) == 0x0007A8, "Member 'AAI_BP_C::Target_Consciousness' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_All_Body_Tonus) == 0x0007B0, "Member 'AAI_BP_C::Target_All_Body_Tonus' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, L_Grip_Type_Default) == 0x0007B8, "Member 'AAI_BP_C::L_Grip_Type_Default' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Give_Up_Meter) == 0x0007C0, "Member 'AAI_BP_C::Give_Up_Meter' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, R_Grip_Type_Current) == 0x0007C8, "Member 'AAI_BP_C::R_Grip_Type_Current' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, L_Offhand_Searching_Grip) == 0x0007C9, "Member 'AAI_BP_C::L_Offhand_Searching_Grip' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Target_Rotation) == 0x0007D0, "Member 'AAI_BP_C::Target_Rotation' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Searching_Grip_Timer) == 0x0007E8, "Member 'AAI_BP_C::Searching_Grip_Timer' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Get_Up_Timer) == 0x0007F0, "Member 'AAI_BP_C::Get_Up_Timer' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Use_Alt_Against_Armor_Rate) == 0x0007F8, "Member 'AAI_BP_C::Use_Alt_Against_Armor_Rate' has a wrong offset!");
static_assert(offsetof(AAI_BP_C, Enemy_Armor_Rate) == 0x000800, "Member 'AAI_BP_C::Enemy_Armor_Rate' has a wrong offset!");

}

