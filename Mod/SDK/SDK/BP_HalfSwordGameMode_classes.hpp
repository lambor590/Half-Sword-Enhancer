#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HalfSwordGameMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_PlayCards_structs.hpp"
#include "ArmorSlots_Enum_structs.hpp"
#include "Menu_Maps_Enum_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HalfSwordGameMode.BP_HalfSwordGameMode_C
// 0x00A0 (0x03C8 - 0x0328)
class ABP_HalfSwordGameMode_C final : public AGameModeBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0328(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<int32, bool>                             ProxyModelLocation;                                // 0x0338(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UGI_Settings_C*                         GI_Settings;                                       // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Enemy_Count;                                       // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Match_Won;                                         // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Player_DED;                                        // 0x0395(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396[0x2];                                      // 0x0396(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Map_Size_X;                                        // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Map_Size_Y;                                        // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Player_Rank;                                       // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          All_Enemies_Dead;                                  // 0x03AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        Background_Music;                                  // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	Enum_PlayCards                                Current_PlayCard;                                  // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USG_Settings_C*                         As_SG_Settings;                                    // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DED();
	void ExecuteUbergraph_BP_HalfSwordGameMode(int32 EntryPoint);
	void GM_CT();
	void GM_Duel();
	void GM_FFA();
	void GM_OVA();
	void GM_TDM();
	void Minus_Enemy();
	void OnAudioFinished_Event();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HalfSwordGameMode_C">();
	}
	static class ABP_HalfSwordGameMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HalfSwordGameMode_C>();
	}
};
static_assert(alignof(ABP_HalfSwordGameMode_C) == 0x000008, "Wrong alignment on ABP_HalfSwordGameMode_C");
static_assert(sizeof(ABP_HalfSwordGameMode_C) == 0x0003C8, "Wrong size on ABP_HalfSwordGameMode_C");
static_assert(offsetof(ABP_HalfSwordGameMode_C, UberGraphFrame) == 0x000328, "Member 'ABP_HalfSwordGameMode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, DefaultSceneRoot) == 0x000330, "Member 'ABP_HalfSwordGameMode_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, ProxyModelLocation) == 0x000338, "Member 'ABP_HalfSwordGameMode_C::ProxyModelLocation' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, GI_Settings) == 0x000388, "Member 'ABP_HalfSwordGameMode_C::GI_Settings' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, Enemy_Count) == 0x000390, "Member 'ABP_HalfSwordGameMode_C::Enemy_Count' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, Match_Won) == 0x000394, "Member 'ABP_HalfSwordGameMode_C::Match_Won' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, Player_DED) == 0x000395, "Member 'ABP_HalfSwordGameMode_C::Player_DED' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, Map_Size_X) == 0x000398, "Member 'ABP_HalfSwordGameMode_C::Map_Size_X' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, Map_Size_Y) == 0x0003A0, "Member 'ABP_HalfSwordGameMode_C::Map_Size_Y' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, Player_Rank) == 0x0003A8, "Member 'ABP_HalfSwordGameMode_C::Player_Rank' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, All_Enemies_Dead) == 0x0003AC, "Member 'ABP_HalfSwordGameMode_C::All_Enemies_Dead' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, Background_Music) == 0x0003B0, "Member 'ABP_HalfSwordGameMode_C::Background_Music' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, Current_PlayCard) == 0x0003B8, "Member 'ABP_HalfSwordGameMode_C::Current_PlayCard' has a wrong offset!");
static_assert(offsetof(ABP_HalfSwordGameMode_C, As_SG_Settings) == 0x0003C0, "Member 'ABP_HalfSwordGameMode_C::As_SG_Settings' has a wrong offset!");

}

