#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModularWeaponBP_Axe2H

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ModularWeaponBP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ModularWeaponBP_Axe2H.ModularWeaponBP_Axe2H_C
// 0x0078 (0x0BA8 - 0x0B30)
class AModularWeaponBP_Axe2H_C final : public AModularWeaponBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ModularWeaponBP_Axe2H_C;            // 0x0B30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Tip6;                                              // 0x0B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Base1_1;                                           // 0x0B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip3;                                              // 0x0B48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip5;                                              // 0x0B50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip4;                                              // 0x0B58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0B60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow4;                                            // 0x0B68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow_0;                                           // 0x0B70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Base1_0;                                           // 0x0B78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip2;                                              // 0x0B80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip1;                                              // 0x0B88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow3;                                            // 0x0B90(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Blade;                                             // 0x0B98(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Grip_0;                                            // 0x0BA0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_ModularWeaponBP_Axe2H(int32 EntryPoint);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ModularWeaponBP_Axe2H_C">();
	}
	static class AModularWeaponBP_Axe2H_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModularWeaponBP_Axe2H_C>();
	}
};
static_assert(alignof(AModularWeaponBP_Axe2H_C) == 0x000008, "Wrong alignment on AModularWeaponBP_Axe2H_C");
static_assert(sizeof(AModularWeaponBP_Axe2H_C) == 0x000BA8, "Wrong size on AModularWeaponBP_Axe2H_C");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, UberGraphFrame_ModularWeaponBP_Axe2H_C) == 0x000B30, "Member 'AModularWeaponBP_Axe2H_C::UberGraphFrame_ModularWeaponBP_Axe2H_C' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Tip6) == 0x000B38, "Member 'AModularWeaponBP_Axe2H_C::Tip6' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Base1_1) == 0x000B40, "Member 'AModularWeaponBP_Axe2H_C::Base1_1' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Tip3) == 0x000B48, "Member 'AModularWeaponBP_Axe2H_C::Tip3' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Tip5) == 0x000B50, "Member 'AModularWeaponBP_Axe2H_C::Tip5' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Tip4) == 0x000B58, "Member 'AModularWeaponBP_Axe2H_C::Tip4' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Box) == 0x000B60, "Member 'AModularWeaponBP_Axe2H_C::Box' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Arrow4) == 0x000B68, "Member 'AModularWeaponBP_Axe2H_C::Arrow4' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Arrow_0) == 0x000B70, "Member 'AModularWeaponBP_Axe2H_C::Arrow_0' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Base1_0) == 0x000B78, "Member 'AModularWeaponBP_Axe2H_C::Base1_0' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Tip2) == 0x000B80, "Member 'AModularWeaponBP_Axe2H_C::Tip2' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Tip1) == 0x000B88, "Member 'AModularWeaponBP_Axe2H_C::Tip1' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Arrow3) == 0x000B90, "Member 'AModularWeaponBP_Axe2H_C::Arrow3' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Blade) == 0x000B98, "Member 'AModularWeaponBP_Axe2H_C::Blade' has a wrong offset!");
static_assert(offsetof(AModularWeaponBP_Axe2H_C, Grip_0) == 0x000BA0, "Member 'AModularWeaponBP_Axe2H_C::Grip_0' has a wrong offset!");

}

