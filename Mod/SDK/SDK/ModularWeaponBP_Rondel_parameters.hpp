#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModularWeaponBP_Rondel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ModularWeaponBP_Rondel.ModularWeaponBP_Rondel_C.BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0128 (0x0128 - 0x0000)
struct ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000128, "Wrong size on ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'ModularWeaponBP_Rondel_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function ModularWeaponBP_Rondel.ModularWeaponBP_Rondel_C.ExecuteUbergraph_ModularWeaponBP_Rondel
// 0x01A0 (0x01A0 - 0x0000)
struct ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0038(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             Temp_struct_Variable;                              // 0x0130(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel) == 0x000010, "Wrong alignment on ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel");
static_assert(sizeof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel) == 0x0001A0, "Wrong size on ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel");
static_assert(offsetof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel, EntryPoint) == 0x000000, "Member 'ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel::EntryPoint' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel, K2Node_ComponentBoundEvent_HitComponent) == 0x000008, "Member 'ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000020, "Member 'ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel, K2Node_ComponentBoundEvent_Hit) == 0x000038, "Member 'ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel, Temp_struct_Variable) == 0x000130, "Member 'ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel, CallFunc_AddComponent_ReturnValue) == 0x000190, "Member 'ModularWeaponBP_Rondel_C_ExecuteUbergraph_ModularWeaponBP_Rondel::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function ModularWeaponBP_Rondel.ModularWeaponBP_Rondel_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct ModularWeaponBP_Rondel_C_UserConstructionScript final
{
public:
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModularWeaponBP_Rondel_C_UserConstructionScript) == 0x000004, "Wrong alignment on ModularWeaponBP_Rondel_C_UserConstructionScript");
static_assert(sizeof(ModularWeaponBP_Rondel_C_UserConstructionScript) == 0x000004, "Wrong size on ModularWeaponBP_Rondel_C_UserConstructionScript");
static_assert(offsetof(ModularWeaponBP_Rondel_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue) == 0x000000, "Member 'ModularWeaponBP_Rondel_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

