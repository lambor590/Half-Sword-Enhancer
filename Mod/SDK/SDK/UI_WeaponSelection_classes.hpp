#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WeaponSelection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "Weapon_Slots_Enum_structs.hpp"
#include "LeftRight_Enum_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_WeaponSelection.UI_WeaponSelection_C
// 0x00A8 (0x0388 - 0x02E0)
class UUI_WeaponSelection_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                B1;                                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Back;                                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_5;                                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                L1;                                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                L2;                                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                R1;                                                // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                R2;                                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Wheel;                                             // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AWillie_BP_C*                           My_Master;                                         // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Selected_Slot_Int;                                 // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Slot_1;                                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture*                               Slot_2;                                            // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture*                               Slot_3;                                            // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture*                               Slot_4;                                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture*                               Slot_5;                                            // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Time_Elapsed;                                      // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hold;                                              // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__UI_WeaponSelection_B1_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_B1_K2Node_ComponentBoundEvent_20_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_B1_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_B1_K2Node_ComponentBoundEvent_9_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_L1_K2Node_ComponentBoundEvent_12_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_L1_K2Node_ComponentBoundEvent_18_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_L1_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_L1_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_L2_K2Node_ComponentBoundEvent_13_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_L2_K2Node_ComponentBoundEvent_19_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_L2_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_L2_K2Node_ComponentBoundEvent_7_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_R1_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_R1_K2Node_ComponentBoundEvent_10_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_R1_K2Node_ComponentBoundEvent_16_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_R1_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_R2_K2Node_ComponentBoundEvent_11_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_R2_K2Node_ComponentBoundEvent_17_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_R2_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__UI_WeaponSelection_R2_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void Close_Widget();
	void Construct();
	void ExecuteUbergraph_UI_WeaponSelection(int32 EntryPoint);
	void Mouse_Click_Left();
	void Mouse_Click_Right();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_WeaponSelection_C">();
	}
	static class UUI_WeaponSelection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_WeaponSelection_C>();
	}
};
static_assert(alignof(UUI_WeaponSelection_C) == 0x000008, "Wrong alignment on UUI_WeaponSelection_C");
static_assert(sizeof(UUI_WeaponSelection_C) == 0x000388, "Wrong size on UUI_WeaponSelection_C");
static_assert(offsetof(UUI_WeaponSelection_C, UberGraphFrame) == 0x0002E0, "Member 'UUI_WeaponSelection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, B1) == 0x0002E8, "Member 'UUI_WeaponSelection_C::B1' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Back) == 0x0002F0, "Member 'UUI_WeaponSelection_C::Back' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Image_1) == 0x0002F8, "Member 'UUI_WeaponSelection_C::Image_1' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Image_2) == 0x000300, "Member 'UUI_WeaponSelection_C::Image_2' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Image_3) == 0x000308, "Member 'UUI_WeaponSelection_C::Image_3' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Image_4) == 0x000310, "Member 'UUI_WeaponSelection_C::Image_4' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Image_5) == 0x000318, "Member 'UUI_WeaponSelection_C::Image_5' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, L1) == 0x000320, "Member 'UUI_WeaponSelection_C::L1' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, L2) == 0x000328, "Member 'UUI_WeaponSelection_C::L2' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, R1) == 0x000330, "Member 'UUI_WeaponSelection_C::R1' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, R2) == 0x000338, "Member 'UUI_WeaponSelection_C::R2' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Wheel) == 0x000340, "Member 'UUI_WeaponSelection_C::Wheel' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, My_Master) == 0x000348, "Member 'UUI_WeaponSelection_C::My_Master' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Selected_Slot_Int) == 0x000350, "Member 'UUI_WeaponSelection_C::Selected_Slot_Int' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Slot_1) == 0x000358, "Member 'UUI_WeaponSelection_C::Slot_1' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Slot_2) == 0x000360, "Member 'UUI_WeaponSelection_C::Slot_2' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Slot_3) == 0x000368, "Member 'UUI_WeaponSelection_C::Slot_3' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Slot_4) == 0x000370, "Member 'UUI_WeaponSelection_C::Slot_4' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Slot_5) == 0x000378, "Member 'UUI_WeaponSelection_C::Slot_5' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Time_Elapsed) == 0x000380, "Member 'UUI_WeaponSelection_C::Time_Elapsed' has a wrong offset!");
static_assert(offsetof(UUI_WeaponSelection_C, Hold) == 0x000381, "Member 'UUI_WeaponSelection_C::Hold' has a wrong offset!");

}

