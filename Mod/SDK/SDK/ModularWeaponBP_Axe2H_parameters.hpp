#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModularWeaponBP_Axe2H

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ModularWeaponBP_Axe2H.ModularWeaponBP_Axe2H_C.BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0128 (0x0128 - 0x0000)
struct ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000128, "Wrong size on ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Blade_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function ModularWeaponBP_Axe2H.ModularWeaponBP_Axe2H_C.BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x0128 (0x0128 - 0x0000)
struct ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000128, "Wrong size on ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'ModularWeaponBP_Axe2H_C_BndEvt__ModularWeaponBP_Axe_Grip_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function ModularWeaponBP_Axe2H.ModularWeaponBP_Axe2H_C.ExecuteUbergraph_ModularWeaponBP_Axe2H
// 0x0258 (0x0258 - 0x0000)
struct ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0038(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent_1;         // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse_1;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit_1;                  // 0x0160(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H) == 0x000008, "Wrong alignment on ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H");
static_assert(sizeof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H) == 0x000258, "Wrong size on ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, EntryPoint) == 0x000000, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::EntryPoint' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_HitComponent) == 0x000008, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000020, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_Hit) == 0x000038, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_HitComponent_1) == 0x000130, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_HitComponent_1' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000138, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000140, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_NormalImpulse_1) == 0x000148, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_NormalImpulse_1' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H, K2Node_ComponentBoundEvent_Hit_1) == 0x000160, "Member 'ModularWeaponBP_Axe2H_C_ExecuteUbergraph_ModularWeaponBP_Axe2H::K2Node_ComponentBoundEvent_Hit_1' has a wrong offset!");

// Function ModularWeaponBP_Axe2H.ModularWeaponBP_Axe2H_C.UserConstructionScript
// 0x00A0 (0x00A0 - 0x0000)
struct ModularWeaponBP_Axe2H_C_UserConstructionScript final
{
public:
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 CallFunc_GetParameterInfo_ReturnValue;             // 0x007C(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModularWeaponBP_Axe2H_C_UserConstructionScript) == 0x000008, "Wrong alignment on ModularWeaponBP_Axe2H_C_UserConstructionScript");
static_assert(sizeof(ModularWeaponBP_Axe2H_C_UserConstructionScript) == 0x0000A0, "Wrong size on ModularWeaponBP_Axe2H_C_UserConstructionScript");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue) == 0x000000, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000010, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_LinearColorLerp_ReturnValue) == 0x000014, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_BreakColor_R) == 0x000024, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_BreakColor_G) == 0x000028, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_BreakColor_B) == 0x00002C, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_BreakColor_A) == 0x000030, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue) == 0x000038, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000050, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_LinearColorLerp_ReturnValue_1) == 0x00005C, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x00006C, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_GetParameterInfo_ReturnValue) == 0x00007C, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_GetParameterInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x00008C, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000090, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ModularWeaponBP_Axe2H_C_UserConstructionScript, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000098, "Member 'ModularWeaponBP_Axe2H_C_UserConstructionScript::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

}

