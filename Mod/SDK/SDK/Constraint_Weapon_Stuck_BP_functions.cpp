#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Constraint_Weapon_Stuck_BP

#include "Basic.hpp"

#include "Constraint_Weapon_Stuck_BP_classes.hpp"
#include "Constraint_Weapon_Stuck_BP_parameters.hpp"


namespace SDK
{

// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.Add Out Point Scene
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AConstraint_Weapon_Stuck_BP_C::Add_Out_Point_Scene(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "Add Out Point Scene");

	Params::Constraint_Weapon_Stuck_BP_C_Add_Out_Point_Scene Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AConstraint_Weapon_Stuck_BP_C::BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Constraint_Weapon_Stuck_BP_C_BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AConstraint_Weapon_Stuck_BP_C::BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::Constraint_Weapon_Stuck_BP_C_BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.Call Dismember
// (BlueprintCallable, BlueprintEvent)

void AConstraint_Weapon_Stuck_BP_C::Call_Dismember()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "Call Dismember");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.Check Dismember 2
// (BlueprintCallable, BlueprintEvent)

void AConstraint_Weapon_Stuck_BP_C::Check_Dismember_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "Check Dismember 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.ExecuteUbergraph_Constraint_Weapon_Stuck_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AConstraint_Weapon_Stuck_BP_C::ExecuteUbergraph_Constraint_Weapon_Stuck_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "ExecuteUbergraph_Constraint_Weapon_Stuck_BP");

	Params::Constraint_Weapon_Stuck_BP_C_ExecuteUbergraph_Constraint_Weapon_Stuck_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.NewFunction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AConstraint_Weapon_Stuck_BP_C::NewFunction(double Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "NewFunction");

	Params::Constraint_Weapon_Stuck_BP_C_NewFunction Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AConstraint_Weapon_Stuck_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AConstraint_Weapon_Stuck_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "ReceiveTick");

	Params::Constraint_Weapon_Stuck_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.Release Constraint
// (BlueprintCallable, BlueprintEvent)

void AConstraint_Weapon_Stuck_BP_C::Release_Constraint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "Release Constraint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C.Renew Costrained Bone
// (BlueprintCallable, BlueprintEvent)

void AConstraint_Weapon_Stuck_BP_C::Renew_Costrained_Bone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Constraint_Weapon_Stuck_BP_C", "Renew Costrained Bone");

	UObject::ProcessEvent(Func, nullptr);
}

}

