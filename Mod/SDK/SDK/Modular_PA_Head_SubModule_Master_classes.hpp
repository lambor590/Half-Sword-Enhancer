#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Modular_PA_Head_SubModule_Master

#include "Basic.hpp"

#include "Enum_MaterialLayer_structs.hpp"
#include "Modular_Weapon_SubModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Modular_PA_Head_SubModule_Master.Modular_PA_Head_SubModule_Master_C
// 0x0010 (0x04E8 - 0x04D8)
class AModular_PA_Head_SubModule_Master_C : public AModular_Weapon_SubModule_C
{
public:
	int32                                         Materian_Int_Min;                                  // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Materian_Int_Max;                                  // 0x04DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Sub_Module;                                        // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Modular_PA_Head_SubModule_Master_C">();
	}
	static class AModular_PA_Head_SubModule_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModular_PA_Head_SubModule_Master_C>();
	}
};
static_assert(alignof(AModular_PA_Head_SubModule_Master_C) == 0x000008, "Wrong alignment on AModular_PA_Head_SubModule_Master_C");
static_assert(sizeof(AModular_PA_Head_SubModule_Master_C) == 0x0004E8, "Wrong size on AModular_PA_Head_SubModule_Master_C");
static_assert(offsetof(AModular_PA_Head_SubModule_Master_C, Materian_Int_Min) == 0x0004D8, "Member 'AModular_PA_Head_SubModule_Master_C::Materian_Int_Min' has a wrong offset!");
static_assert(offsetof(AModular_PA_Head_SubModule_Master_C, Materian_Int_Max) == 0x0004DC, "Member 'AModular_PA_Head_SubModule_Master_C::Materian_Int_Max' has a wrong offset!");
static_assert(offsetof(AModular_PA_Head_SubModule_Master_C, Sub_Module) == 0x0004E0, "Member 'AModular_PA_Head_SubModule_Master_C::Sub_Module' has a wrong offset!");

}

