#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Armor_Master

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "HideBodyPart_Enum_structs.hpp"
#include "Str_Medieval_Color_Swatches_structs.hpp"
#include "Enum_DismembermentPart_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Enum_Clothing_Material_structs.hpp"
#include "ArmorSlots_Enum_structs.hpp"
#include "Enum_Tiers_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Armor_Master.BP_Armor_Master_C
// 0x0560 (0x07F0 - 0x0290)
class ABP_Armor_Master_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Armor_Mesh_Static;                                 // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Armor_Mesh_Skeletal;                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMesh*>                  SkeletalMesh_T1;                                   // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UStaticMesh*>                    CollisionMesh;                                     // 0x02C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Simulates_Physics;                                 // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_Ears;                                         // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hide_Jaw;                                          // 0x02D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EArmorSlots_Enum                              Armor_Slot;                                        // 0x02D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Block_Dismember_Bone;                              // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Team;                                              // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Protection_Blunt;                                  // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Protection_Cut;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Protection_Stab;                                   // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EHideBodyPart_Enum, bool>                Hide_Body_Parts;                                   // 0x0308(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Outer_0;                                           // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Material_Density;                                  // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, bool>                       Affected_Bones;                                    // 0x0368(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           Layer_Levels;                                      // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Visor_Location;                                    // 0x03C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Visor_Max_Open;                                    // 0x03E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Vertex_Paintable_;                                 // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Hide_Physics_Bones;                                // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UPhysicsAsset*                          Physics_Asset;                                     // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Mass_Scale;                                        // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             World_Transform;                                   // 0x0420(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Pick_Up;                                           // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, double>                     Armor_Plate_Sound;                                 // 0x0488(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, double>                     Armor_Mail_Sound;                                  // 0x04D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundCue*                              Hit_Sound;                                         // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Dynamic_Color;                                     // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_Clothing_Material                        Material;                                          // 0x0531(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_532[0x6];                                      // 0x0532(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Dynamic_Material;                                  // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Stop_Generating_DM;                                // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStr_Medieval_Color_Swatches           Color_1;                                           // 0x0548(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Medieval_Color_Swatches           Color_2;                                           // 0x0570(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Medieval_Color_Swatches           Color_3;                                           // 0x0598(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          World_Mesh_Static;                                 // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Armor_Mesh;                                        // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, double>                     Bone_Weights;                                      // 0x05D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FVector>             Bone_Constraints;                                  // 0x0620(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        AI_Invinvcibility_Rate;                            // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Hands_Rigidity__Gauntlets_;                        // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMesh*>                  SkeletalMesh_T2;                                   // 0x0680(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class USkeletalMesh*>                  SkeletalMesh_T3;                                   // 0x0690(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	Enum_Tiers                                    Tier;                                              // 0x06A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x3];                                      // 0x06A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           C_1;                                               // 0x06A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           C_2;                                               // 0x06B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           C_3;                                               // 0x06C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_6D4[0x4];                                      // 0x06D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USG_Equipment_C*                        As_SG_Armor_Try;                                   // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Load;                                              // 0x06E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Save;                                              // 0x06E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_6E2[0x6];                                      // 0x06E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USG_Equipment_C*                        As_SG_Equipment;                                   // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        If_Helmet_Strap_Power;                             // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStr_Medieval_Color_Swatches           Color_Team_1;                                      // 0x06F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Medieval_Color_Swatches           Color_Team_2;                                      // 0x0720(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Medieval_Color_Swatches           Color_Team_3;                                      // 0x0748(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FStr_Medieval_Color_Swatches           Color_Team_4;                                      // 0x0770(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Metal_;                                            // 0x0798(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<Enum_DismembermentPart, bool>            Block_Dismember_Part;                              // 0x07A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__BP_Armor_Master_Armor_Mesh_Static_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__BP_Armor_Master_Armor_Mesh_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_BP_Armor_Master(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Armor_Master_C">();
	}
	static class ABP_Armor_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Armor_Master_C>();
	}
};
static_assert(alignof(ABP_Armor_Master_C) == 0x000010, "Wrong alignment on ABP_Armor_Master_C");
static_assert(sizeof(ABP_Armor_Master_C) == 0x0007F0, "Wrong size on ABP_Armor_Master_C");
static_assert(offsetof(ABP_Armor_Master_C, UberGraphFrame) == 0x000290, "Member 'ABP_Armor_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Armor_Mesh_Static) == 0x000298, "Member 'ABP_Armor_Master_C::Armor_Mesh_Static' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Armor_Mesh_Skeletal) == 0x0002A0, "Member 'ABP_Armor_Master_C::Armor_Mesh_Skeletal' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, DefaultSceneRoot) == 0x0002A8, "Member 'ABP_Armor_Master_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, SkeletalMesh_T1) == 0x0002B0, "Member 'ABP_Armor_Master_C::SkeletalMesh_T1' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, CollisionMesh) == 0x0002C0, "Member 'ABP_Armor_Master_C::CollisionMesh' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Simulates_Physics) == 0x0002D0, "Member 'ABP_Armor_Master_C::Simulates_Physics' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Hide_Ears) == 0x0002D1, "Member 'ABP_Armor_Master_C::Hide_Ears' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Hide_Jaw) == 0x0002D2, "Member 'ABP_Armor_Master_C::Hide_Jaw' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Armor_Slot) == 0x0002D3, "Member 'ABP_Armor_Master_C::Armor_Slot' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Block_Dismember_Bone) == 0x0002D8, "Member 'ABP_Armor_Master_C::Block_Dismember_Bone' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Team) == 0x0002E8, "Member 'ABP_Armor_Master_C::Team' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Protection_Blunt) == 0x0002F0, "Member 'ABP_Armor_Master_C::Protection_Blunt' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Protection_Cut) == 0x0002F8, "Member 'ABP_Armor_Master_C::Protection_Cut' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Protection_Stab) == 0x000300, "Member 'ABP_Armor_Master_C::Protection_Stab' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Hide_Body_Parts) == 0x000308, "Member 'ABP_Armor_Master_C::Hide_Body_Parts' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Outer_0) == 0x000358, "Member 'ABP_Armor_Master_C::Outer_0' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Material_Density) == 0x000360, "Member 'ABP_Armor_Master_C::Material_Density' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Affected_Bones) == 0x000368, "Member 'ABP_Armor_Master_C::Affected_Bones' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Layer_Levels) == 0x0003B8, "Member 'ABP_Armor_Master_C::Layer_Levels' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Visor_Location) == 0x0003C8, "Member 'ABP_Armor_Master_C::Visor_Location' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Visor_Max_Open) == 0x0003E0, "Member 'ABP_Armor_Master_C::Visor_Max_Open' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Vertex_Paintable_) == 0x0003F8, "Member 'ABP_Armor_Master_C::Vertex_Paintable_' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Hide_Physics_Bones) == 0x000400, "Member 'ABP_Armor_Master_C::Hide_Physics_Bones' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Physics_Asset) == 0x000410, "Member 'ABP_Armor_Master_C::Physics_Asset' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Mass_Scale) == 0x000418, "Member 'ABP_Armor_Master_C::Mass_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, World_Transform) == 0x000420, "Member 'ABP_Armor_Master_C::World_Transform' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Pick_Up) == 0x000480, "Member 'ABP_Armor_Master_C::Pick_Up' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Armor_Plate_Sound) == 0x000488, "Member 'ABP_Armor_Master_C::Armor_Plate_Sound' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Armor_Mail_Sound) == 0x0004D8, "Member 'ABP_Armor_Master_C::Armor_Mail_Sound' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Hit_Sound) == 0x000528, "Member 'ABP_Armor_Master_C::Hit_Sound' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Dynamic_Color) == 0x000530, "Member 'ABP_Armor_Master_C::Dynamic_Color' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Material) == 0x000531, "Member 'ABP_Armor_Master_C::Material' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Dynamic_Material) == 0x000538, "Member 'ABP_Armor_Master_C::Dynamic_Material' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Stop_Generating_DM) == 0x000540, "Member 'ABP_Armor_Master_C::Stop_Generating_DM' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Color_1) == 0x000548, "Member 'ABP_Armor_Master_C::Color_1' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Color_2) == 0x000570, "Member 'ABP_Armor_Master_C::Color_2' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Color_3) == 0x000598, "Member 'ABP_Armor_Master_C::Color_3' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, World_Mesh_Static) == 0x0005C0, "Member 'ABP_Armor_Master_C::World_Mesh_Static' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Armor_Mesh) == 0x0005C8, "Member 'ABP_Armor_Master_C::Armor_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Bone_Weights) == 0x0005D0, "Member 'ABP_Armor_Master_C::Bone_Weights' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Bone_Constraints) == 0x000620, "Member 'ABP_Armor_Master_C::Bone_Constraints' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, AI_Invinvcibility_Rate) == 0x000670, "Member 'ABP_Armor_Master_C::AI_Invinvcibility_Rate' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Hands_Rigidity__Gauntlets_) == 0x000678, "Member 'ABP_Armor_Master_C::Hands_Rigidity__Gauntlets_' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, SkeletalMesh_T2) == 0x000680, "Member 'ABP_Armor_Master_C::SkeletalMesh_T2' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, SkeletalMesh_T3) == 0x000690, "Member 'ABP_Armor_Master_C::SkeletalMesh_T3' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Tier) == 0x0006A0, "Member 'ABP_Armor_Master_C::Tier' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, C_1) == 0x0006A4, "Member 'ABP_Armor_Master_C::C_1' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, C_2) == 0x0006B4, "Member 'ABP_Armor_Master_C::C_2' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, C_3) == 0x0006C4, "Member 'ABP_Armor_Master_C::C_3' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, As_SG_Armor_Try) == 0x0006D8, "Member 'ABP_Armor_Master_C::As_SG_Armor_Try' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Load) == 0x0006E0, "Member 'ABP_Armor_Master_C::Load' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Save) == 0x0006E1, "Member 'ABP_Armor_Master_C::Save' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, As_SG_Equipment) == 0x0006E8, "Member 'ABP_Armor_Master_C::As_SG_Equipment' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, If_Helmet_Strap_Power) == 0x0006F0, "Member 'ABP_Armor_Master_C::If_Helmet_Strap_Power' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Color_Team_1) == 0x0006F8, "Member 'ABP_Armor_Master_C::Color_Team_1' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Color_Team_2) == 0x000720, "Member 'ABP_Armor_Master_C::Color_Team_2' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Color_Team_3) == 0x000748, "Member 'ABP_Armor_Master_C::Color_Team_3' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Color_Team_4) == 0x000770, "Member 'ABP_Armor_Master_C::Color_Team_4' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Metal_) == 0x000798, "Member 'ABP_Armor_Master_C::Metal_' has a wrong offset!");
static_assert(offsetof(ABP_Armor_Master_C, Block_Dismember_Part) == 0x0007A0, "Member 'ABP_Armor_Master_C::Block_Dismember_Part' has a wrong offset!");

}

