#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FreeCamera.BP_FreeCamera_C
// 0x0088 (0x0318 - 0x0290)
class BP_FreeCamera::ABP_FreeCamera_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        MovementInterpolationSpeed;                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        RotationInterpolationSpeed;                        // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MovementSensitivity;                               // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        RotationSensitivity;                               // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUseMaximumDistance;                               // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaximumDistance;                                   // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              isMovingCamera;                                    // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              isNotMovingCamera;                                 // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        StartingFOV;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        StartingRoll;                                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UBPC_PhotoMode_C*                       PhotoModeComponentReference;                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FreeCamera(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlueprintGeneratedClass BP_FreeCamera.BP_FreeCamera_C", true, "BP_FreeCamera_C">();
	}
	static class BP_FreeCamera::ABP_FreeCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<BP_FreeCamera::ABP_FreeCamera_C>();
	}
};
static_assert(alignof(BP_FreeCamera::ABP_FreeCamera_C) == 0x000008, "Wrong alignment on BP_FreeCamera::ABP_FreeCamera_C");
static_assert(sizeof(BP_FreeCamera::ABP_FreeCamera_C) == 0x000318, "Wrong size on BP_FreeCamera::ABP_FreeCamera_C");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, UberGraphFrame) == 0x000290, "Member 'BP_FreeCamera::ABP_FreeCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, Camera) == 0x000298, "Member 'BP_FreeCamera::ABP_FreeCamera_C::Camera' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, SpringArm) == 0x0002A0, "Member 'BP_FreeCamera::ABP_FreeCamera_C::SpringArm' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, Sphere) == 0x0002A8, "Member 'BP_FreeCamera::ABP_FreeCamera_C::Sphere' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, MovementInterpolationSpeed) == 0x0002B0, "Member 'BP_FreeCamera::ABP_FreeCamera_C::MovementInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, RotationInterpolationSpeed) == 0x0002B8, "Member 'BP_FreeCamera::ABP_FreeCamera_C::RotationInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, MovementSensitivity) == 0x0002C0, "Member 'BP_FreeCamera::ABP_FreeCamera_C::MovementSensitivity' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, RotationSensitivity) == 0x0002C8, "Member 'BP_FreeCamera::ABP_FreeCamera_C::RotationSensitivity' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, bUseMaximumDistance) == 0x0002D0, "Member 'BP_FreeCamera::ABP_FreeCamera_C::bUseMaximumDistance' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, MaximumDistance) == 0x0002D8, "Member 'BP_FreeCamera::ABP_FreeCamera_C::MaximumDistance' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, isMovingCamera) == 0x0002E0, "Member 'BP_FreeCamera::ABP_FreeCamera_C::isMovingCamera' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, isNotMovingCamera) == 0x0002F0, "Member 'BP_FreeCamera::ABP_FreeCamera_C::isNotMovingCamera' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, StartingFOV) == 0x000300, "Member 'BP_FreeCamera::ABP_FreeCamera_C::StartingFOV' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, StartingRoll) == 0x000308, "Member 'BP_FreeCamera::ABP_FreeCamera_C::StartingRoll' has a wrong offset!");
static_assert(offsetof(BP_FreeCamera::ABP_FreeCamera_C, PhotoModeComponentReference) == 0x000310, "Member 'BP_FreeCamera::ABP_FreeCamera_C::PhotoModeComponentReference' has a wrong offset!");

}

