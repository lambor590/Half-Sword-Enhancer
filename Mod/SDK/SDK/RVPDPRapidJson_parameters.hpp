#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RVPDPRapidJson

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeBool_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeBool_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeBool_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeBool_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeBool_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeBool_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeBool_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeBool_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeBool_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeBool_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeBoolArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeBoolArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeColorArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FColor>                         DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeColorArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeFColor_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeFColor_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeFColor_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeFColor_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeFColor_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeFColor_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFColor_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFColor_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFColor_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFColor_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeFloat_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeFloat_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeFloat_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeFloat_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeFloat_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeFloat_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFloat_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFloat_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFloat_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFloat_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeFloatArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeFloatArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeFName_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeFName_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeFName_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeFName_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeFName_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeFName_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFName_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFName_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFName_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFName_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeFRotator_Wrapper
// 0x0028 (0x0028 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeFRotator_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeFRotator_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeFRotator_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeFRotator_Wrapper) == 0x000028, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeFRotator_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFRotator_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFRotator_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFRotator_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFRotator_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeFString_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeFString_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeFString_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeFString_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeFString_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeFString_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFString_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFString_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFString_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFString_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeFText_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeFText_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeFText_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeFText_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeFText_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeFText_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFText_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFText_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFText_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFText_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeFTransform_Wrapper
// 0x0070 (0x0070 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeFTransform_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeFTransform_Wrapper) == 0x000010, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeFTransform_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeFTransform_Wrapper) == 0x000070, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeFTransform_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFTransform_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFTransform_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFTransform_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFTransform_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeFVector_Wrapper
// 0x0028 (0x0028 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeFVector_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeFVector_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeFVector_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeFVector_Wrapper) == 0x000028, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeFVector_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFVector_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFVector_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeFVector_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeFVector_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeInt32ArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeInt32ArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeInt64_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeInt64_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeInt64_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeInt64_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeInt64_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeInt64_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeInt64_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeInt64_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeInt64_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeInt64_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeInt64ArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int64>                                 DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeInt64ArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeInt_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeInt_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeInt_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeInt_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeInt_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeInt_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeInt_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeInt_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeInt_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeInt_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeNameArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeNameArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeRotatorArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                       DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeRotatorArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeStringArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeStringArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayBool_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayFColor_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FColor>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayFloat_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayFName_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayFRotator_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                       ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayFString_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayFText_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayFTransform_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayFVector_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayInt64_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int64>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayInt_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeTArrayUInt8_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeTextArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeTextArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeTransformArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeTransformArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeserializeUInt8_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeserializeUInt8_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeserializeUInt8_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeserializeUInt8_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeserializeUInt8_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeserializeUInt8_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeUInt8_Wrapper, JsonString) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeUInt8_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeserializeUInt8_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_DeserializeUInt8_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeUInt8ArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeUInt8ArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.DeSerializeVectorArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 StringToDeSerialize;                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        DeSerializedResult;                                // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync, StringToDeSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync::StringToDeSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync, DeSerializedResult) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_DeSerializeVectorArrayAsync::DeSerializedResult' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeBool_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeBool_Wrapper final
{
public:
	bool                                          BoolValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeBool_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeBool_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeBool_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeBool_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeBool_Wrapper, BoolValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeBool_Wrapper::BoolValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeBool_Wrapper, ReturnValue) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeBool_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeBoolArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<bool>                                  ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeBoolArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeColorArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FColor>                         ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeColorArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeFColor_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeFColor_Wrapper final
{
public:
	struct FColor                                 ColorValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeFColor_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeFColor_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeFColor_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeFColor_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFColor_Wrapper, ColorValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFColor_Wrapper::ColorValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFColor_Wrapper, ReturnValue) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFColor_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeFloat_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeFloat_Wrapper final
{
public:
	float                                         FloatValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeFloat_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeFloat_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeFloat_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeFloat_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFloat_Wrapper, FloatValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFloat_Wrapper::FloatValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFloat_Wrapper, ReturnValue) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFloat_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeFloatArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFloatArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeFName_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeFName_Wrapper final
{
public:
	class FName                                   NameValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeFName_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeFName_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeFName_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeFName_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFName_Wrapper, NameValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFName_Wrapper::NameValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFName_Wrapper, ReturnValue) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFName_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeFRotator_Wrapper
// 0x0028 (0x0028 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeFRotator_Wrapper final
{
public:
	struct FRotator                               RotatorValue;                                      // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeFRotator_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeFRotator_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeFRotator_Wrapper) == 0x000028, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeFRotator_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFRotator_Wrapper, RotatorValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFRotator_Wrapper::RotatorValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFRotator_Wrapper, ReturnValue) == 0x000018, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFRotator_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeFString_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeFString_Wrapper final
{
public:
	class FString                                 StringValue;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeFString_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeFString_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeFString_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeFString_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFString_Wrapper, StringValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFString_Wrapper::StringValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFString_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFString_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeFText_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeFText_Wrapper final
{
public:
	class FText                                   TextValue;                                         // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeFText_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeFText_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeFText_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeFText_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFText_Wrapper, TextValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFText_Wrapper::TextValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFText_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFText_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeFTransform_Wrapper
// 0x0070 (0x0070 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeFTransform_Wrapper final
{
public:
	struct FTransform                             TransformValue;                                    // 0x0000(0x0060)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeFTransform_Wrapper) == 0x000010, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeFTransform_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeFTransform_Wrapper) == 0x000070, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeFTransform_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFTransform_Wrapper, TransformValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFTransform_Wrapper::TransformValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFTransform_Wrapper, ReturnValue) == 0x000060, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFTransform_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeFVector_Wrapper
// 0x0028 (0x0028 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeFVector_Wrapper final
{
public:
	struct FVector                                VectorValue;                                       // 0x0000(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeFVector_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeFVector_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeFVector_Wrapper) == 0x000028, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeFVector_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFVector_Wrapper, VectorValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFVector_Wrapper::VectorValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeFVector_Wrapper, ReturnValue) == 0x000018, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeFVector_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeInt32ArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<int32>                                 ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt32ArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeInt64_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeInt64_Wrapper final
{
public:
	int64                                         Int64Value;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeInt64_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeInt64_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeInt64_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeInt64_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt64_Wrapper, Int64Value) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt64_Wrapper::Int64Value' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt64_Wrapper, ReturnValue) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt64_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeInt64ArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<int64>                                 ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt64ArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeInt_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeInt_Wrapper final
{
public:
	int32                                         IntValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeInt_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeInt_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeInt_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeInt_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt_Wrapper, IntValue) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt_Wrapper::IntValue' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeInt_Wrapper, ReturnValue) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeInt_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeNameArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeNameArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeRotatorArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                       ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeRotatorArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeStringArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeStringArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayBool_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper final
{
public:
	TArray<bool>                                  InBools;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper, InBools) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper::InBools' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayFColor_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper final
{
public:
	TArray<struct FColor>                         Colors;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper, Colors) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper::Colors' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayFloat_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper final
{
public:
	TArray<float>                                 inFloats;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper, inFloats) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper::inFloats' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayFName_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper final
{
public:
	TArray<class FName>                           InNames;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper, InNames) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper::InNames' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayFRotator_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper final
{
public:
	TArray<struct FRotator>                       InRotator;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper, InRotator) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper::InRotator' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayFString_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper final
{
public:
	TArray<class FString>                         InStrings;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper, InStrings) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper::InStrings' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayFText_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper final
{
public:
	TArray<class FText>                           InTexts;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper, InTexts) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper::InTexts' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayFTransform_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper final
{
public:
	TArray<struct FTransform>                     InTransform;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper, InTransform) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper::InTransform' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayFVector_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper final
{
public:
	TArray<struct FVector>                        inFVector;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper, inFVector) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper::inFVector' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayInt64_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper final
{
public:
	TArray<int64>                                 InInt64s;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper, InInt64s) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper::InInt64s' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayInt_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper final
{
public:
	TArray<int32>                                 InInts;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper, InInts) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper::InInts' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTArrayUInt8_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper final
{
public:
	TArray<uint8>                                 InUInt8s;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper) == 0x000020, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper, InUInt8s) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper::InUInt8s' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper, ReturnValue) == 0x000010, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTextArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTextArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeTransformArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeTransformArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeUInt8_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeUInt8_Wrapper final
{
public:
	uint8                                         UInt8Value;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeUInt8_Wrapper) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeUInt8_Wrapper");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeUInt8_Wrapper) == 0x000018, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeUInt8_Wrapper");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeUInt8_Wrapper, UInt8Value) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeUInt8_Wrapper::UInt8Value' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeUInt8_Wrapper, ReturnValue) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeUInt8_Wrapper::ReturnValue' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeUint8ArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeUint8ArrayAsync::SerializedString' has a wrong offset!");

// Function RVPDPRapidJson.RVPDPRapidJsonFunctionLibrary.SerializeVectorArrayAsync
// 0x0040 (0x0040 - 0x0000)
struct RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        ArrayToSerialize;                                  // 0x0020(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 SerializedString;                                  // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync) == 0x000008, "Wrong alignment on RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync");
static_assert(sizeof(RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync) == 0x000040, "Wrong size on RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync, WorldContextObject) == 0x000000, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync, LatentInfo) == 0x000008, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync::LatentInfo' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync, ArrayToSerialize) == 0x000020, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync::ArrayToSerialize' has a wrong offset!");
static_assert(offsetof(RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync, SerializedString) == 0x000030, "Member 'RVPDPRapidJsonFunctionLibrary_SerializeVectorArrayAsync::SerializedString' has a wrong offset!");

}

