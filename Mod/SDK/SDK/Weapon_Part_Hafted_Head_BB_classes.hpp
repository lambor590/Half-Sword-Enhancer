#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_Part_Hafted_Head_BB

#include "Basic.hpp"

#include "Modular_Hafted_Head_Master_classes.hpp"
#include "Enum_MaterialQuality_structs.hpp"
#include "Enum_MaterialLayer_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Weapon_Part_Hafted_Head_BB.Weapon_Part_Hafted_Head_BB_C
// 0x0028 (0x0538 - 0x0510)
class AWeapon_Part_Hafted_Head_BB_C final : public AModular_Hafted_Head_Master_C
{
public:
	class USceneComponent*                        Tip2;                                              // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip3;                                              // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip1;                                              // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip5;                                              // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip4;                                              // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Weapon_Part_Hafted_Head_BB_C">();
	}
	static class AWeapon_Part_Hafted_Head_BB_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeapon_Part_Hafted_Head_BB_C>();
	}
};
static_assert(alignof(AWeapon_Part_Hafted_Head_BB_C) == 0x000008, "Wrong alignment on AWeapon_Part_Hafted_Head_BB_C");
static_assert(sizeof(AWeapon_Part_Hafted_Head_BB_C) == 0x000538, "Wrong size on AWeapon_Part_Hafted_Head_BB_C");
static_assert(offsetof(AWeapon_Part_Hafted_Head_BB_C, Tip2) == 0x000510, "Member 'AWeapon_Part_Hafted_Head_BB_C::Tip2' has a wrong offset!");
static_assert(offsetof(AWeapon_Part_Hafted_Head_BB_C, Tip3) == 0x000518, "Member 'AWeapon_Part_Hafted_Head_BB_C::Tip3' has a wrong offset!");
static_assert(offsetof(AWeapon_Part_Hafted_Head_BB_C, Tip1) == 0x000520, "Member 'AWeapon_Part_Hafted_Head_BB_C::Tip1' has a wrong offset!");
static_assert(offsetof(AWeapon_Part_Hafted_Head_BB_C, Tip5) == 0x000528, "Member 'AWeapon_Part_Hafted_Head_BB_C::Tip5' has a wrong offset!");
static_assert(offsetof(AWeapon_Part_Hafted_Head_BB_C, Tip4) == 0x000530, "Member 'AWeapon_Part_Hafted_Head_BB_C::Tip4' has a wrong offset!");

}

