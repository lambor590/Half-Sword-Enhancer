#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_WeaponInteraction

#include "Basic.hpp"

#include "BPI_WeaponInteraction_classes.hpp"
#include "BPI_WeaponInteraction_parameters.hpp"


namespace SDK
{

// Function BPI_WeaponInteraction.BPI_WeaponInteraction_C.Weapon HIt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Hit_Component                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Weapon_Velocity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit_Result                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// double                                  EdgeAllignment_Dot                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Laser_temp_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_WeaponInteraction_C::Weapon_HIt(class UPrimitiveComponent* Hit_Component, const struct FVector& Weapon_Velocity, const struct FHitResult& Hit_Result, double EdgeAllignment_Dot, bool Laser_temp_, class UClass* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_WeaponInteraction_C", "Weapon HIt");

	Params::BPI_WeaponInteraction_C_Weapon_HIt Parms{};

	Parms.Hit_Component = Hit_Component;
	Parms.Weapon_Velocity = std::move(Weapon_Velocity);
	Parms.Hit_Result = std::move(Hit_Result);
	Parms.EdgeAllignment_Dot = EdgeAllignment_Dot;
	Parms.Laser_temp_ = Laser_temp_;
	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}

}

